/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/app/about": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get App Info
         * @description Get general application information
         */
        get: operations["get_app_info_api_app_about_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/app/about/startup-info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Startup Info
         * @description returns helpful startup information
         */
        get: operations["get_startup_info_api_app_about_startup_info_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/app/about/theme": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get App Theme
         * @description Get's the current theme settings
         */
        get: operations["get_app_theme_api_app_about_theme_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Token */
        post: operations["get_token_api_auth_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/oauth": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oauth Login */
        get: operations["oauth_login_api_auth_oauth_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/oauth/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oauth Callback */
        get: operations["oauth_callback_api_auth_oauth_callback_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Refresh Token
         * @description Use a valid token to get another token
         */
        get: operations["refresh_token_api_auth_refresh_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout */
        post: operations["logout_api_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register New User */
        post: operations["register_new_user_api_users_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Logged In User */
        get: operations["get_logged_in_user_api_users_self_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/self/ratings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Logged In User Ratings */
        get: operations["get_logged_in_user_ratings_api_users_self_ratings_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/self/ratings/{recipe_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Logged In User Rating For Recipe */
        get: operations["get_logged_in_user_rating_for_recipe_api_users_self_ratings__recipe_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/self/favorites": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Logged In User Favorites */
        get: operations["get_logged_in_user_favorites_api_users_self_favorites_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Password
         * @description Resets the User Password
         */
        put: operations["update_password_api_users_password_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User */
        get: operations["get_user_api_users__item_id__get"];
        /** Update User */
        put: operations["update_user_api_users__item_id__put"];
        post?: never;
        /** Delete User */
        delete: operations["delete_user_api_users__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Returns all users from all groups
         */
        get: operations["get_all_api_users_get"];
        put?: never;
        /** Create User */
        post: operations["create_user_api_users_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/forgot-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Forgot Password
         * @description Sends an email with a reset link to the user
         */
        post: operations["forgot_password_api_users_forgot_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Reset Password
         * @description Resets the user password
         */
        post: operations["reset_password_api_users_reset_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Update User Image
         * @description Updates a User Image
         */
        post: operations["update_user_image_api_users__id__image_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/api-tokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Api Token
         * @description Create api_token in the Database
         */
        post: operations["create_api_token_api_users_api_tokens_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/api-tokens/{token_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete Api Token
         * @description Delete api_token from the Database
         */
        delete: operations["delete_api_token_api_users_api_tokens__token_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/ratings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Ratings
         * @description Get user's rated recipes
         */
        get: operations["get_ratings_api_users__id__ratings_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/favorites": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Favorites
         * @description Get user's favorited recipes
         */
        get: operations["get_favorites_api_users__id__favorites_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/ratings/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Set Rating
         * @description Sets the user's rating for a recipe
         */
        post: operations["set_rating_api_users__id__ratings__slug__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/favorites/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add Favorite
         * @description Adds a recipe to the user's favorites
         */
        post: operations["add_favorite_api_users__id__favorites__slug__post"];
        /**
         * Remove Favorite
         * @description Removes a recipe from the user's favorites
         */
        delete: operations["remove_favorite_api_users__id__favorites__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/cookbooks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_cookbooks_get"];
        /** Update Many */
        put: operations["update_many_api_households_cookbooks_put"];
        /** Create One */
        post: operations["create_one_api_households_cookbooks_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/cookbooks/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_cookbooks__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_cookbooks__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_cookbooks__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/events/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_events_notifications_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_households_events_notifications_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/events/notifications/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_events_notifications__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_events_notifications__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_events_notifications__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/events/notifications/{item_id}/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Test Notification */
        post: operations["test_notification_api_households_events_notifications__item_id__test_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/recipe-actions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_recipe_actions_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_households_recipe_actions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/recipe-actions/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_recipe_actions__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_recipe_actions__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_recipe_actions__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/recipe-actions/{item_id}/trigger/{recipe_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Trigger Action */
        post: operations["trigger_action_api_households_recipe_actions__item_id__trigger__recipe_slug__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Logged In User Household
         * @description Returns the Household Data for the Current User
         */
        get: operations["get_logged_in_user_household_api_households_self_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/self/recipes/{recipe_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Household Recipe
         * @description Returns recipe data for the current household
         */
        get: operations["get_household_recipe_api_households_self_recipes__recipe_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Household Members
         * @description Returns all users belonging to the current household
         */
        get: operations["get_household_members_api_households_members_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Household Preferences */
        get: operations["get_household_preferences_api_households_preferences_get"];
        /** Update Household Preferences */
        put: operations["update_household_preferences_api_households_preferences_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Set Member Permissions */
        put: operations["set_member_permissions_api_households_permissions_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Statistics */
        get: operations["get_statistics_api_households_statistics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/invitations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Invite Tokens */
        get: operations["get_invite_tokens_api_households_invitations_get"];
        put?: never;
        /** Create Invite Token */
        post: operations["create_invite_token_api_households_invitations_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/invitations/email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Email Invitation */
        post: operations["email_invitation_api_households_invitations_email_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/lists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_shopping_lists_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_households_shopping_lists_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/lists/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_shopping_lists__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_shopping_lists__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_shopping_lists__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/lists/{item_id}/label-settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Label Settings */
        put: operations["update_label_settings_api_households_shopping_lists__item_id__label_settings_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/lists/{item_id}/recipe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Recipe Ingredients To List */
        post: operations["add_recipe_ingredients_to_list_api_households_shopping_lists__item_id__recipe_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/lists/{item_id}/recipe/{recipe_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add Single Recipe Ingredients To List
         * @deprecated
         */
        post: operations["add_single_recipe_ingredients_to_list_api_households_shopping_lists__item_id__recipe__recipe_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/lists/{item_id}/recipe/{recipe_id}/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Remove Recipe Ingredients From List */
        post: operations["remove_recipe_ingredients_from_list_api_households_shopping_lists__item_id__recipe__recipe_id__delete_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_shopping_items_get"];
        /** Update Many */
        put: operations["update_many_api_households_shopping_items_put"];
        /** Create One */
        post: operations["create_one_api_households_shopping_items_post"];
        /** Delete Many */
        delete: operations["delete_many_api_households_shopping_items_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/items/create-bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Many */
        post: operations["create_many_api_households_shopping_items_create_bulk_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/shopping/items/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_shopping_items__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_shopping_items__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_shopping_items__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/webhooks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_webhooks_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_households_webhooks_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/webhooks/rerun": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Rerun Webhooks
         * @description Manually re-fires all previously scheduled webhooks for today
         */
        post: operations["rerun_webhooks_api_households_webhooks_rerun_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/webhooks/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_webhooks__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_webhooks__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_webhooks__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/webhooks/{item_id}/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Test One */
        post: operations["test_one_api_households_webhooks__item_id__test_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/mealplans/rules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_mealplans_rules_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_households_mealplans_rules_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/mealplans/rules/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_mealplans_rules__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_mealplans_rules__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_mealplans_rules__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/mealplans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_households_mealplans_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_households_mealplans_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/mealplans/today": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Todays Meals */
        get: operations["get_todays_meals_api_households_mealplans_today_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/mealplans/random": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Random Meal
         * @description `create_random_meal` is a route that provides the randomized functionality for mealplaners.
         *     It operates by following the rules set out in the household's mealplan settings. If no settings
         *     are set, it will return any random meal.
         *
         *     Refer to the mealplan settings routes for more information on how rules can be applied
         *     to the random meal selector.
         */
        post: operations["create_random_meal_api_households_mealplans_random_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/households/mealplans/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_households_mealplans__item_id__get"];
        /** Update One */
        put: operations["update_one_api_households_mealplans__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_households_mealplans__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/households": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Households */
        get: operations["get_all_households_api_groups_households_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/households/{household_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One Household */
        get: operations["get_one_household_api_groups_households__household_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Logged In User Group
         * @description Returns the Group Data for the Current User
         */
        get: operations["get_logged_in_user_group_api_groups_self_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Group Members
         * @description Returns all users belonging to the current group
         */
        get: operations["get_group_members_api_groups_members_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/members/{username_or_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Group Member
         * @description Returns a single user belonging to the current group
         */
        get: operations["get_group_member_api_groups_members__username_or_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Group Preferences */
        get: operations["get_group_preferences_api_groups_preferences_get"];
        /** Update Group Preferences */
        put: operations["update_group_preferences_api_groups_preferences_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/storage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Storage */
        get: operations["get_storage_api_groups_storage_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/migrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Start Data Migration */
        post: operations["start_data_migration_api_groups_migrations_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_groups_reports_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/reports/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_groups_reports__item_id__get"];
        put?: never;
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_groups_reports__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_groups_labels_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_groups_labels_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/labels/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_groups_labels__item_id__get"];
        /** Update One */
        put: operations["update_one_api_groups_labels__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_groups_labels__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/seeders/foods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Seed Foods */
        post: operations["seed_foods_api_groups_seeders_foods_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/seeders/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Seed Labels */
        post: operations["seed_labels_api_groups_seeders_labels_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/groups/seeders/units": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Seed Units */
        post: operations["seed_units_api_groups_seeders_units_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/exports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Recipe Formats And Templates */
        get: operations["get_recipe_formats_and_templates_api_recipes_exports_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/{slug}/exports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recipe As Format
         * @description ## Parameters
         *     `template_name`: The name of the template to use to use in the exports listed. Template type will automatically
         *     be set on the backend. Because of this, it's important that your templates have unique names. See available
         *     names and formats in the /api/recipes/exports endpoint.
         */
        get: operations["get_recipe_as_format_api_recipes__slug__exports_get"];
        put?: never;
        /**
         * Get Recipe Zip Token
         * @description Generates a recipe zip token to be used to download a recipe as a zip file
         */
        post: operations["get_recipe_zip_token_api_recipes__slug__exports_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/{slug}/exports/zip": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recipe As Zip
         * @description Get a Recipe and Its Original Image as a Zip File
         */
        get: operations["get_recipe_as_zip_api_recipes__slug__exports_zip_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/test-scrape-url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Test Parse Recipe Url */
        post: operations["test_parse_recipe_url_api_recipes_test_scrape_url_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/create/html-or-json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Recipe From Html Or Json
         * @description Takes in raw HTML or a https://schema.org/Recipe object as a JSON string and parses it like a URL
         */
        post: operations["create_recipe_from_html_or_json_api_recipes_create_html_or_json_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/create/url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Parse Recipe Url
         * @description Takes in a URL and attempts to scrape data and load it into the database
         */
        post: operations["parse_recipe_url_api_recipes_create_url_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/create/url/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Parse Recipe Url Bulk
         * @description Takes in a URL and attempts to scrape data and load it into the database
         */
        post: operations["parse_recipe_url_bulk_api_recipes_create_url_bulk_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/create/zip": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Recipe From Zip
         * @description Create recipe from archive
         */
        post: operations["create_recipe_from_zip_api_recipes_create_zip_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/create/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Recipe From Image
         * @description Create a recipe from an image using OpenAI.
         *     Optionally specify a language for it to translate the recipe to.
         */
        post: operations["create_recipe_from_image_api_recipes_create_image_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_recipes_get"];
        /** Update Many */
        put: operations["update_many_api_recipes_put"];
        /**
         * Create One
         * @description Takes in a JSON string and loads data into the database as a new entry
         */
        post: operations["create_one_api_recipes_post"];
        delete?: never;
        options?: never;
        head?: never;
        /** Patch Many */
        patch: operations["patch_many_api_recipes_patch"];
        trace?: never;
    };
    "/api/recipes/suggestions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Suggest Recipes */
        get: operations["suggest_recipes_api_recipes_suggestions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get One
         * @description Takes in a recipe's slug or id and returns all data for a recipe
         */
        get: operations["get_one_api_recipes__slug__get"];
        /**
         * Update One
         * @description Updates a recipe by existing slug and data.
         */
        put: operations["update_one_api_recipes__slug__put"];
        post?: never;
        /**
         * Delete One
         * @description Deletes a recipe by slug
         */
        delete: operations["delete_one_api_recipes__slug__delete"];
        options?: never;
        head?: never;
        /**
         * Patch One
         * @description Updates a recipe by existing slug and data.
         */
        patch: operations["patch_one_api_recipes__slug__patch"];
        trace?: never;
    };
    "/api/recipes/{slug}/duplicate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Duplicate One
         * @description Duplicates a recipe with a new custom name if given
         */
        post: operations["duplicate_one_api_recipes__slug__duplicate_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/{slug}/last-made": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update Last Made
         * @description Update a recipe's last made timestamp
         */
        patch: operations["update_last_made_api_recipes__slug__last_made_patch"];
        trace?: never;
    };
    "/api/recipes/{slug}/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Recipe Image */
        put: operations["update_recipe_image_api_recipes__slug__image_put"];
        /** Scrape Image Url */
        post: operations["scrape_image_url_api_recipes__slug__image_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/{slug}/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload Recipe Asset
         * @description Upload a file to store as a recipe asset
         */
        post: operations["upload_recipe_asset_api_recipes__slug__assets_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/{slug}/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recipe Comments
         * @description Get all comments for a recipe
         */
        get: operations["get_recipe_comments_api_recipes__slug__comments_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/tag": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bulk Tag Recipes */
        post: operations["bulk_tag_recipes_api_recipes_bulk_actions_tag_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bulk Settings Recipes */
        post: operations["bulk_settings_recipes_api_recipes_bulk_actions_settings_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/categorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bulk Categorize Recipes */
        post: operations["bulk_categorize_recipes_api_recipes_bulk_actions_categorize_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bulk Delete Recipes */
        post: operations["bulk_delete_recipes_api_recipes_bulk_actions_delete_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/export": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Exported Data */
        get: operations["get_exported_data_api_recipes_bulk_actions_export_get"];
        put?: never;
        /** Bulk Export Recipes */
        post: operations["bulk_export_recipes_api_recipes_bulk_actions_export_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/export/download": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Exported Data Token
         * @description Returns a token to download a file
         */
        get: operations["get_exported_data_token_api_recipes_bulk_actions_export_download_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/bulk-actions/export/purge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Purge Export Data
         * @description Remove all exports data, including items on disk without database entry
         */
        delete: operations["purge_export_data_api_recipes_bulk_actions_export_purge_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/shared/{token_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Shared Recipe */
        get: operations["get_shared_recipe_api_recipes_shared__token_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/timeline/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_recipes_timeline_events_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_recipes_timeline_events_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/timeline/events/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_recipes_timeline_events__item_id__get"];
        /** Update One */
        put: operations["update_one_api_recipes_timeline_events__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_recipes_timeline_events__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recipes/timeline/events/{item_id}/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Event Image */
        put: operations["update_event_image_api_recipes_timeline_events__item_id__image_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Returns a list of available categories in the database
         */
        get: operations["get_all_api_organizers_categories_get"];
        put?: never;
        /**
         * Create One
         * @description Creates a Category in the database
         */
        post: operations["create_one_api_organizers_categories_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/categories/empty": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All Empty
         * @description Returns a list of categories that do not contain any recipes
         */
        get: operations["get_all_empty_api_organizers_categories_empty_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/categories/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get One
         * @description Returns a list of recipes associated with the provided category.
         */
        get: operations["get_one_api_organizers_categories__item_id__get"];
        /**
         * Update One
         * @description Updates an existing Tag in the database
         */
        put: operations["update_one_api_organizers_categories__item_id__put"];
        post?: never;
        /**
         * Delete One
         * @description Removes a recipe category from the database. Deleting a
         *     category does not impact a recipe. The category will be removed
         *     from any recipes that contain it
         */
        delete: operations["delete_one_api_organizers_categories__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/categories/slug/{category_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get One By Slug
         * @description Returns a category object with the associated recieps relating to the category
         */
        get: operations["get_one_by_slug_api_organizers_categories_slug__category_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Returns a list of available tags in the database
         */
        get: operations["get_all_api_organizers_tags_get"];
        put?: never;
        /**
         * Create One
         * @description Creates a Tag in the database
         */
        post: operations["create_one_api_organizers_tags_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tags/empty": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Empty Tags
         * @description Returns a list of tags that do not contain any recipes
         */
        get: operations["get_empty_tags_api_organizers_tags_empty_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tags/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get One
         * @description Returns a list of recipes associated with the provided tag.
         */
        get: operations["get_one_api_organizers_tags__item_id__get"];
        /**
         * Update One
         * @description Updates an existing Tag in the database
         */
        put: operations["update_one_api_organizers_tags__item_id__put"];
        post?: never;
        /**
         * Delete Recipe Tag
         * @description Removes a recipe tag from the database. Deleting a
         *     tag does not impact a recipe. The tag will be removed
         *     from any recipes that contain it
         */
        delete: operations["delete_recipe_tag_api_organizers_tags__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tags/slug/{tag_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One By Slug */
        get: operations["get_one_by_slug_api_organizers_tags_slug__tag_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tools": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_organizers_tools_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_organizers_tools_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tools/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_organizers_tools__item_id__get"];
        /** Update One */
        put: operations["update_one_api_organizers_tools__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_organizers_tools__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organizers/tools/slug/{tool_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One By Slug */
        get: operations["get_one_by_slug_api_organizers_tools_slug__tool_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/shared/recipes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_shared_recipes_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_shared_recipes_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/shared/recipes/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_shared_recipes__item_id__get"];
        put?: never;
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_shared_recipes__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_comments_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_comments_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/comments/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_comments__item_id__get"];
        /** Update One */
        put: operations["update_one_api_comments__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_comments__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/parser/ingredient": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Parse Ingredient */
        post: operations["parse_ingredient_api_parser_ingredient_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/parser/ingredients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Parse Ingredients */
        post: operations["parse_ingredients_api_parser_ingredients_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/foods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_foods_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_foods_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/foods/merge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Merge One */
        put: operations["merge_one_api_foods_merge_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/foods/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_foods__item_id__get"];
        /** Update One */
        put: operations["update_one_api_foods__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_foods__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/units": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_units_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_units_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/units/merge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Merge One */
        put: operations["merge_one_api_units_merge_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/units/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_units__item_id__get"];
        /** Update One */
        put: operations["update_one_api_units__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_units__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/about": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get App Info
         * @description Get general application information
         */
        get: operations["get_app_info_api_admin_about_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/about/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get App Statistics */
        get: operations["get_app_statistics_api_admin_about_statistics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/about/check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check App Config */
        get: operations["check_app_config_api_admin_about_check_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_admin_users_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_admin_users_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users/unlock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Unlock Users */
        post: operations["unlock_users_api_admin_users_unlock_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_admin_users__item_id__get"];
        /** Update One */
        put: operations["update_one_api_admin_users__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_admin_users__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users/password-reset-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Token
         * @description Generates a reset token and returns it. This is an authenticated endpoint
         */
        post: operations["generate_token_api_admin_users_password_reset_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/households": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_admin_households_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_admin_households_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/households/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_admin_households__item_id__get"];
        /** Update One */
        put: operations["update_one_api_admin_households__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_admin_households__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_admin_groups_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_admin_groups_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/groups/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_admin_groups__item_id__get"];
        /** Update One */
        put: operations["update_one_api_admin_groups__item_id__put"];
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_admin_groups__item_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Email Config
         * @description Get general application information
         */
        get: operations["check_email_config_api_admin_email_get"];
        put?: never;
        /** Send Test Email */
        post: operations["send_test_email_api_admin_email_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/backups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_admin_backups_get"];
        put?: never;
        /** Create One */
        post: operations["create_one_api_admin_backups_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/backups/{file_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get One
         * @description Returns a token to download a file
         */
        get: operations["get_one_api_admin_backups__file_name__get"];
        put?: never;
        post?: never;
        /** Delete One */
        delete: operations["delete_one_api_admin_backups__file_name__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/backups/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upload One
         * @description Upload a .zip File to later be imported into Mealie
         */
        post: operations["upload_one_api_admin_backups_upload_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/backups/{file_name}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Import One */
        post: operations["import_one_api_admin_backups__file_name__restore_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/maintenance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Maintenance Summary
         * @description Get the maintenance summary
         */
        get: operations["get_maintenance_summary_api_admin_maintenance_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/maintenance/storage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Storage Details */
        get: operations["get_storage_details_api_admin_maintenance_storage_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/maintenance/clean/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Clean Images
         * @description Purges all the images from the filesystem that aren't .webp
         */
        post: operations["clean_images_api_admin_maintenance_clean_images_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/maintenance/clean/temp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Clean Temp */
        post: operations["clean_temp_api_admin_maintenance_clean_temp_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/maintenance/clean/recipe-folders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Clean Recipe Folders
         * @description Deletes all the recipe folders that don't have names that are valid UUIDs
         */
        post: operations["clean_recipe_folders_api_admin_maintenance_clean_recipe_folders_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/debug/openai": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Debug Openai */
        post: operations["debug_openai_api_admin_debug_openai_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/foods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__foods_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/foods/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_explore_groups__group_slug__foods__item_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/households": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__households_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/households/{household_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Household */
        get: operations["get_household_api_explore_groups__group_slug__households__household_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/organizers/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__organizers_categories_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/organizers/categories/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_explore_groups__group_slug__organizers_categories__item_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/organizers/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__organizers_tags_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/organizers/tags/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_explore_groups__group_slug__organizers_tags__item_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/organizers/tools": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__organizers_tools_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/organizers/tools/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_explore_groups__group_slug__organizers_tools__item_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/cookbooks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__cookbooks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/cookbooks/{item_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get One */
        get: operations["get_one_api_explore_groups__group_slug__cookbooks__item_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/recipes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All */
        get: operations["get_all_api_explore_groups__group_slug__recipes_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/recipes/suggestions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Suggest Recipes */
        get: operations["suggest_recipes_api_explore_groups__group_slug__recipes_suggestions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/explore/groups/{group_slug}/recipes/{recipe_slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Recipe */
        get: operations["get_recipe_api_explore_groups__group_slug__recipes__recipe_slug__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/media/recipes/{recipe_id}/images/{file_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recipe Img
         * @description Takes in a recipe id, returns the static image. This route is proxied in the docker image
         *     and should not hit the API in production
         */
        get: operations["get_recipe_img_api_media_recipes__recipe_id__images__file_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/media/recipes/{recipe_id}/images/timeline/{timeline_event_id}/{file_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recipe Timeline Event Img
         * @description Takes in a recipe id and event timeline id, returns the static image. This route is proxied in the docker image
         *     and should not hit the API in production
         */
        get: operations["get_recipe_timeline_event_img_api_media_recipes__recipe_id__images_timeline__timeline_event_id___file_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/media/recipes/{recipe_id}/assets/{file_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recipe Asset
         * @description Returns a recipe asset
         */
        get: operations["get_recipe_asset_api_media_recipes__recipe_id__assets__file_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/media/users/{user_id}/{file_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get User Image
         * @description Takes in a recipe slug, returns the static image. This route is proxied in the docker image
         *     and should not hit the API in production
         */
        get: operations["get_user_image_api_media_users__user_id___file_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/media/docker/validate.txt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Validation Text */
        get: operations["get_validation_text_api_media_docker_validate_txt_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/utils/download": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download File
         * @description Uses a file token obtained by an active user to retrieve a file from the operating
         *     system.
         */
        get: operations["download_file_api_utils_download_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AdminAboutInfo */
        AdminAboutInfo: {
            /** Production */
            production: boolean;
            /** Version */
            version: string;
            /** Demostatus */
            demoStatus: boolean;
            /** Allowsignup */
            allowSignup: boolean;
            /** Defaultgroupslug */
            defaultGroupSlug?: string | null;
            /** Defaulthouseholdslug */
            defaultHouseholdSlug?: string | null;
            /** Enableoidc */
            enableOidc: boolean;
            /** Oidcredirect */
            oidcRedirect: boolean;
            /** Oidcprovidername */
            oidcProviderName: string;
            /** Enableopenai */
            enableOpenai: boolean;
            /** Enableopenaiimageservices */
            enableOpenaiImageServices: boolean;
            /** Versionlatest */
            versionLatest: string;
            /** Apiport */
            apiPort: number;
            /** Apidocs */
            apiDocs: boolean;
            /** Dbtype */
            dbType: string;
            /** Dburl */
            dbUrl?: string | null;
            /** Defaultgroup */
            defaultGroup: string;
            /** Defaulthousehold */
            defaultHousehold: string;
            /** Buildid */
            buildId: string;
            /** Recipescraperversion */
            recipeScraperVersion: string;
        };
        /** AllBackups */
        AllBackups: {
            /** Imports */
            imports: components["schemas"]["BackupFile"][];
            /** Templates */
            templates: string[];
        };
        /** AppInfo */
        AppInfo: {
            /** Production */
            production: boolean;
            /** Version */
            version: string;
            /** Demostatus */
            demoStatus: boolean;
            /** Allowsignup */
            allowSignup: boolean;
            /** Defaultgroupslug */
            defaultGroupSlug?: string | null;
            /** Defaulthouseholdslug */
            defaultHouseholdSlug?: string | null;
            /** Enableoidc */
            enableOidc: boolean;
            /** Oidcredirect */
            oidcRedirect: boolean;
            /** Oidcprovidername */
            oidcProviderName: string;
            /** Enableopenai */
            enableOpenai: boolean;
            /** Enableopenaiimageservices */
            enableOpenaiImageServices: boolean;
        };
        /** AppStartupInfo */
        AppStartupInfo: {
            /** Isfirstlogin */
            isFirstLogin: boolean;
            /** Isdemo */
            isDemo: boolean;
        };
        /** AppStatistics */
        AppStatistics: {
            /** Totalrecipes */
            totalRecipes: number;
            /** Totalusers */
            totalUsers: number;
            /** Totalhouseholds */
            totalHouseholds: number;
            /** Totalgroups */
            totalGroups: number;
            /** Uncategorizedrecipes */
            uncategorizedRecipes: number;
            /** Untaggedrecipes */
            untaggedRecipes: number;
        };
        /** AppTheme */
        AppTheme: {
            /**
             * Lightprimary
             * @default #E58325
             */
            lightPrimary: string;
            /**
             * Lightaccent
             * @default #007A99
             */
            lightAccent: string;
            /**
             * Lightsecondary
             * @default #973542
             */
            lightSecondary: string;
            /**
             * Lightsuccess
             * @default #43A047
             */
            lightSuccess: string;
            /**
             * Lightinfo
             * @default #1976D2
             */
            lightInfo: string;
            /**
             * Lightwarning
             * @default #FF6D00
             */
            lightWarning: string;
            /**
             * Lighterror
             * @default #EF5350
             */
            lightError: string;
            /**
             * Darkprimary
             * @default #E58325
             */
            darkPrimary: string;
            /**
             * Darkaccent
             * @default #007A99
             */
            darkAccent: string;
            /**
             * Darksecondary
             * @default #973542
             */
            darkSecondary: string;
            /**
             * Darksuccess
             * @default #43A047
             */
            darkSuccess: string;
            /**
             * Darkinfo
             * @default #1976D2
             */
            darkInfo: string;
            /**
             * Darkwarning
             * @default #FF6D00
             */
            darkWarning: string;
            /**
             * Darkerror
             * @default #EF5350
             */
            darkError: string;
        };
        /** AssignCategories */
        AssignCategories: {
            /** Recipes */
            recipes: string[];
            /** Categories */
            categories: components["schemas"]["CategoryBase"][];
        };
        /** AssignSettings */
        AssignSettings: {
            /** Recipes */
            recipes: string[];
            settings: components["schemas"]["RecipeSettings"];
        };
        /** AssignTags */
        AssignTags: {
            /** Recipes */
            recipes: string[];
            /** Tags */
            tags: components["schemas"]["TagBase"][];
        };
        /**
         * AuthMethod
         * @enum {string}
         */
        AuthMethod: "Mealie" | "LDAP" | "OIDC";
        /** BackupFile */
        BackupFile: {
            /** Name */
            name: string;
            /**
             * Date
             * Format: date-time
             */
            date: string;
            /** Size */
            size: string;
        };
        /** Body_create_recipe_from_image_api_recipes_create_image_post */
        Body_create_recipe_from_image_api_recipes_create_image_post: {
            /** Images */
            images: string[];
        };
        /** Body_create_recipe_from_zip_api_recipes_create_zip_post */
        Body_create_recipe_from_zip_api_recipes_create_zip_post: {
            /**
             * Archive
             * Format: binary
             */
            archive: string;
        };
        /** Body_debug_openai_api_admin_debug_openai_post */
        Body_debug_openai_api_admin_debug_openai_post: {
            /** Image */
            image?: string | null;
        };
        /** Body_get_token_api_auth_token_post */
        Body_get_token_api_auth_token_post: {
            /**
             * Username
             * @default
             */
            username: string;
            /**
             * Password
             * @default
             */
            password: string;
            /**
             * Remember Me
             * @default false
             */
            remember_me: boolean;
        };
        /** Body_start_data_migration_api_groups_migrations_post */
        Body_start_data_migration_api_groups_migrations_post: {
            /**
             * Add Migration Tag
             * @default false
             */
            add_migration_tag: boolean;
            migration_type: components["schemas"]["SupportedMigrations"];
            /**
             * Archive
             * Format: binary
             */
            archive: string;
        };
        /** Body_update_event_image_api_recipes_timeline_events__item_id__image_put */
        Body_update_event_image_api_recipes_timeline_events__item_id__image_put: {
            /**
             * Image
             * Format: binary
             */
            image: string;
            /** Extension */
            extension: string;
        };
        /** Body_update_recipe_image_api_recipes__slug__image_put */
        Body_update_recipe_image_api_recipes__slug__image_put: {
            /**
             * Image
             * Format: binary
             */
            image: string;
            /** Extension */
            extension: string;
        };
        /** Body_update_user_image_api_users__id__image_post */
        Body_update_user_image_api_users__id__image_post: {
            /**
             * Profile
             * Format: binary
             */
            profile: string;
        };
        /** Body_upload_one_api_admin_backups_upload_post */
        Body_upload_one_api_admin_backups_upload_post: {
            /**
             * Archive
             * Format: binary
             */
            archive: string;
        };
        /** Body_upload_recipe_asset_api_recipes__slug__assets_post */
        Body_upload_recipe_asset_api_recipes__slug__assets_post: {
            /** Name */
            name: string;
            /** Icon */
            icon: string;
            /** Extension */
            extension: string;
            /**
             * File
             * Format: binary
             */
            file: string;
        };
        /** CategoryBase */
        CategoryBase: {
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
        };
        /** CategoryIn */
        CategoryIn: {
            /** Name */
            name: string;
        };
        /** CategoryOut */
        CategoryOut: {
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
        };
        /** CategorySummary */
        CategorySummary: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            /** Name */
            name: string;
        };
        /** ChangePassword */
        ChangePassword: {
            /**
             * Currentpassword
             * @default
             */
            currentPassword: string;
            /** Newpassword */
            newPassword: string;
        };
        /** CheckAppConfig */
        CheckAppConfig: {
            /** Emailready */
            emailReady: boolean;
            /** Ldapready */
            ldapReady: boolean;
            /** Oidcready */
            oidcReady: boolean;
            /** Enableopenai */
            enableOpenai: boolean;
            /** Baseurlset */
            baseUrlSet: boolean;
            /** Isuptodate */
            isUpToDate: boolean;
        };
        /** CookBookPagination */
        CookBookPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["ReadCookBook"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** CreateCookBook */
        CreateCookBook: {
            /** Name */
            name: string;
            /**
             * Description
             * @default
             */
            description: string;
            /** Slug */
            slug?: string | null;
            /**
             * Position
             * @default 1
             */
            position: number;
            /**
             * Public
             * @default false
             */
            public: boolean;
            /**
             * Queryfilterstring
             * @default
             */
            queryFilterString: string;
        };
        /** CreateGroupRecipeAction */
        CreateGroupRecipeAction: {
            actionType: components["schemas"]["GroupRecipeActionType"];
            /** Title */
            title: string;
            /** Url */
            url: string;
        };
        /** CreateIngredientFood */
        CreateIngredientFood: {
            /** Id */
            id?: string | null;
            /** Name */
            name: string;
            /** Pluralname */
            pluralName?: string | null;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Labelid */
            labelId?: string | null;
            /**
             * Aliases
             * @default []
             */
            aliases: components["schemas"]["CreateIngredientFoodAlias"][];
            /**
             * Householdswithingredientfood
             * @default []
             */
            householdsWithIngredientFood: string[];
        };
        /** CreateIngredientFoodAlias */
        CreateIngredientFoodAlias: {
            /** Name */
            name: string;
        };
        /** CreateIngredientUnit */
        CreateIngredientUnit: {
            /** Id */
            id?: string | null;
            /** Name */
            name: string;
            /** Pluralname */
            pluralName?: string | null;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Fraction
             * @default true
             */
            fraction: boolean;
            /**
             * Abbreviation
             * @default
             */
            abbreviation: string;
            /**
             * Pluralabbreviation
             * @default
             */
            pluralAbbreviation: string | null;
            /**
             * Useabbreviation
             * @default false
             */
            useAbbreviation: boolean;
            /**
             * Aliases
             * @default []
             */
            aliases: components["schemas"]["CreateIngredientUnitAlias"][];
        };
        /** CreateIngredientUnitAlias */
        CreateIngredientUnitAlias: {
            /** Name */
            name: string;
        };
        /** CreateInviteToken */
        CreateInviteToken: {
            /** Uses */
            uses: number;
            /** Groupid */
            groupId?: string | null;
            /** Householdid */
            householdId?: string | null;
        };
        /** CreatePlanEntry */
        CreatePlanEntry: {
            /**
             * Date
             * Format: date
             */
            date: string;
            /** @default breakfast */
            entryType: components["schemas"]["PlanEntryType"];
            /**
             * Title
             * @default
             */
            title: string;
            /**
             * Text
             * @default
             */
            text: string;
            /** Recipeid */
            recipeId?: string | null;
        };
        /** CreateRandomEntry */
        CreateRandomEntry: {
            /**
             * Date
             * Format: date
             */
            date: string;
            /** @default dinner */
            entryType: components["schemas"]["PlanEntryType"];
        };
        /** CreateRecipe */
        CreateRecipe: {
            /** Name */
            name: string;
        };
        /** CreateRecipeBulk */
        CreateRecipeBulk: {
            /** Url */
            url: string;
            /** Categories */
            categories?: components["schemas"]["RecipeCategory"][] | null;
            /** Tags */
            tags?: components["schemas"]["RecipeTag"][] | null;
        };
        /** CreateRecipeByUrlBulk */
        CreateRecipeByUrlBulk: {
            /** Imports */
            imports: components["schemas"]["CreateRecipeBulk"][];
        };
        /** CreateUserRegistration */
        CreateUserRegistration: {
            /** Group */
            group?: string | null;
            /** Household */
            household?: string | null;
            /** Grouptoken */
            groupToken?: string | null;
            /** Email */
            email: string;
            /** Username */
            username: string;
            /** Fullname */
            fullName: string;
            /** Password */
            password: string;
            /** Passwordconfirm */
            passwordConfirm: string;
            /**
             * Advanced
             * @default false
             */
            advanced: boolean;
            /**
             * Private
             * @default false
             */
            private: boolean;
            /**
             * Seeddata
             * @default false
             */
            seedData: boolean;
            /**
             * Locale
             * @default en-US
             */
            locale: string;
        };
        /** CreateWebhook */
        CreateWebhook: {
            /**
             * Enabled
             * @default true
             */
            enabled: boolean;
            /**
             * Name
             * @default
             */
            name: string;
            /**
             * Url
             * @default
             */
            url: string;
            /** @default mealplan */
            webhookType: components["schemas"]["WebhookType"];
            /**
             * Scheduledtime
             * Format: time
             */
            scheduledTime: string;
        };
        /** DebugResponse */
        DebugResponse: {
            /** Success */
            success: boolean;
            /** Response */
            response?: string | null;
        };
        /** DeleteRecipes */
        DeleteRecipes: {
            /** Recipes */
            recipes: string[];
        };
        /** DeleteTokenResponse */
        DeleteTokenResponse: {
            /** Tokendelete */
            tokenDelete: string;
        };
        /** EmailInitationResponse */
        EmailInitationResponse: {
            /** Success */
            success: boolean;
            /** Error */
            error?: string | null;
        };
        /** EmailInvitation */
        EmailInvitation: {
            /** Email */
            email: string;
            /** Token */
            token: string;
        };
        /** EmailReady */
        EmailReady: {
            /** Ready */
            ready: boolean;
        };
        /** EmailSuccess */
        EmailSuccess: {
            /** Success */
            success: boolean;
            /** Error */
            error?: string | null;
        };
        /** EmailTest */
        EmailTest: {
            /** Email */
            email: string;
        };
        /** ExportRecipes */
        ExportRecipes: {
            /** Recipes */
            recipes: string[];
            /** @default json */
            exportType: components["schemas"]["ExportTypes"];
        };
        /**
         * ExportTypes
         * @enum {string}
         */
        ExportTypes: "json";
        /** FileTokenResponse */
        FileTokenResponse: {
            /** Filetoken */
            fileToken: string;
        };
        /** ForgotPassword */
        ForgotPassword: {
            /** Email */
            email: string;
        };
        /** FormatResponse */
        FormatResponse: {
            /** Json */
            json: string[];
            /** Zip */
            zip: string[];
            /** Jinja2 */
            jinja2: string[];
        };
        /** GroupAdminUpdate */
        GroupAdminUpdate: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            preferences?: components["schemas"]["UpdateGroupPreferences"] | null;
        };
        /** GroupBase */
        GroupBase: {
            /** Name */
            name: string;
        };
        /** GroupDataExport */
        GroupDataExport: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Name */
            name: string;
            /** Filename */
            filename: string;
            /** Path */
            path: string;
            /** Size */
            size: string;
            /**
             * Expires
             * Format: date-time
             */
            expires: string;
        };
        /** GroupEventNotifierCreate */
        GroupEventNotifierCreate: {
            /** Name */
            name: string;
            /** Appriseurl */
            appriseUrl?: string | null;
        };
        /**
         * GroupEventNotifierOptions
         * @description These events are in-sync with the EventTypes found in the EventBusService.
         *     If you modify this, make sure to update the EventBusService as well.
         */
        GroupEventNotifierOptions: {
            /**
             * Testmessage
             * @default false
             */
            testMessage: boolean;
            /**
             * Webhooktask
             * @default false
             */
            webhookTask: boolean;
            /**
             * Recipecreated
             * @default false
             */
            recipeCreated: boolean;
            /**
             * Recipeupdated
             * @default false
             */
            recipeUpdated: boolean;
            /**
             * Recipedeleted
             * @default false
             */
            recipeDeleted: boolean;
            /**
             * Usersignup
             * @default false
             */
            userSignup: boolean;
            /**
             * Datamigrations
             * @default false
             */
            dataMigrations: boolean;
            /**
             * Dataexport
             * @default false
             */
            dataExport: boolean;
            /**
             * Dataimport
             * @default false
             */
            dataImport: boolean;
            /**
             * Mealplanentrycreated
             * @default false
             */
            mealplanEntryCreated: boolean;
            /**
             * Shoppinglistcreated
             * @default false
             */
            shoppingListCreated: boolean;
            /**
             * Shoppinglistupdated
             * @default false
             */
            shoppingListUpdated: boolean;
            /**
             * Shoppinglistdeleted
             * @default false
             */
            shoppingListDeleted: boolean;
            /**
             * Cookbookcreated
             * @default false
             */
            cookbookCreated: boolean;
            /**
             * Cookbookupdated
             * @default false
             */
            cookbookUpdated: boolean;
            /**
             * Cookbookdeleted
             * @default false
             */
            cookbookDeleted: boolean;
            /**
             * Tagcreated
             * @default false
             */
            tagCreated: boolean;
            /**
             * Tagupdated
             * @default false
             */
            tagUpdated: boolean;
            /**
             * Tagdeleted
             * @default false
             */
            tagDeleted: boolean;
            /**
             * Categorycreated
             * @default false
             */
            categoryCreated: boolean;
            /**
             * Categoryupdated
             * @default false
             */
            categoryUpdated: boolean;
            /**
             * Categorydeleted
             * @default false
             */
            categoryDeleted: boolean;
        };
        /** GroupEventNotifierOptionsOut */
        GroupEventNotifierOptionsOut: {
            /**
             * Testmessage
             * @default false
             */
            testMessage: boolean;
            /**
             * Webhooktask
             * @default false
             */
            webhookTask: boolean;
            /**
             * Recipecreated
             * @default false
             */
            recipeCreated: boolean;
            /**
             * Recipeupdated
             * @default false
             */
            recipeUpdated: boolean;
            /**
             * Recipedeleted
             * @default false
             */
            recipeDeleted: boolean;
            /**
             * Usersignup
             * @default false
             */
            userSignup: boolean;
            /**
             * Datamigrations
             * @default false
             */
            dataMigrations: boolean;
            /**
             * Dataexport
             * @default false
             */
            dataExport: boolean;
            /**
             * Dataimport
             * @default false
             */
            dataImport: boolean;
            /**
             * Mealplanentrycreated
             * @default false
             */
            mealplanEntryCreated: boolean;
            /**
             * Shoppinglistcreated
             * @default false
             */
            shoppingListCreated: boolean;
            /**
             * Shoppinglistupdated
             * @default false
             */
            shoppingListUpdated: boolean;
            /**
             * Shoppinglistdeleted
             * @default false
             */
            shoppingListDeleted: boolean;
            /**
             * Cookbookcreated
             * @default false
             */
            cookbookCreated: boolean;
            /**
             * Cookbookupdated
             * @default false
             */
            cookbookUpdated: boolean;
            /**
             * Cookbookdeleted
             * @default false
             */
            cookbookDeleted: boolean;
            /**
             * Tagcreated
             * @default false
             */
            tagCreated: boolean;
            /**
             * Tagupdated
             * @default false
             */
            tagUpdated: boolean;
            /**
             * Tagdeleted
             * @default false
             */
            tagDeleted: boolean;
            /**
             * Categorycreated
             * @default false
             */
            categoryCreated: boolean;
            /**
             * Categoryupdated
             * @default false
             */
            categoryUpdated: boolean;
            /**
             * Categorydeleted
             * @default false
             */
            categoryDeleted: boolean;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** GroupEventNotifierOut */
        GroupEventNotifierOut: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /** Enabled */
            enabled: boolean;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            options: components["schemas"]["GroupEventNotifierOptionsOut"];
        };
        /** GroupEventNotifierUpdate */
        GroupEventNotifierUpdate: {
            /** Name */
            name: string;
            /** Appriseurl */
            appriseUrl?: string | null;
            /**
             * Enabled
             * @default true
             */
            enabled: boolean;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /** @default {
             *       "testMessage": false,
             *       "webhookTask": false,
             *       "recipeCreated": false,
             *       "recipeUpdated": false,
             *       "recipeDeleted": false,
             *       "userSignup": false,
             *       "dataMigrations": false,
             *       "dataExport": false,
             *       "dataImport": false,
             *       "mealplanEntryCreated": false,
             *       "shoppingListCreated": false,
             *       "shoppingListUpdated": false,
             *       "shoppingListDeleted": false,
             *       "cookbookCreated": false,
             *       "cookbookUpdated": false,
             *       "cookbookDeleted": false,
             *       "tagCreated": false,
             *       "tagUpdated": false,
             *       "tagDeleted": false,
             *       "categoryCreated": false,
             *       "categoryUpdated": false,
             *       "categoryDeleted": false
             *     } */
            options: components["schemas"]["GroupEventNotifierOptions"];
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** GroupEventPagination */
        GroupEventPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["GroupEventNotifierOut"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** GroupHouseholdSummary */
        GroupHouseholdSummary: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
        };
        /** GroupInDB */
        GroupInDB: {
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            /**
             * Categories
             * @default []
             */
            categories: components["schemas"]["CategoryBase"][] | null;
            /**
             * Webhooks
             * @default []
             */
            webhooks: components["schemas"]["ReadWebhook"][];
            /** Households */
            households?: components["schemas"]["GroupHouseholdSummary"][] | null;
            /** Users */
            users?: components["schemas"]["UserSummary"][] | null;
            preferences?: components["schemas"]["ReadGroupPreferences"] | null;
        };
        /** GroupPagination */
        GroupPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["GroupInDB"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** GroupRecipeActionOut */
        GroupRecipeActionOut: {
            actionType: components["schemas"]["GroupRecipeActionType"];
            /** Title */
            title: string;
            /** Url */
            url: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** GroupRecipeActionPagination */
        GroupRecipeActionPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["GroupRecipeActionOut"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /**
         * GroupRecipeActionType
         * @enum {string}
         */
        GroupRecipeActionType: "link" | "post";
        /** GroupStorage */
        GroupStorage: {
            /** Usedstoragebytes */
            usedStorageBytes: number;
            /** Usedstoragestr */
            usedStorageStr: string;
            /** Totalstoragebytes */
            totalStorageBytes: number;
            /** Totalstoragestr */
            totalStorageStr: string;
        };
        /** GroupSummary */
        GroupSummary: {
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            preferences?: components["schemas"]["ReadGroupPreferences"] | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** HouseholdCreate */
        HouseholdCreate: {
            /** Groupid */
            groupId?: string | null;
            /** Name */
            name: string;
        };
        /** HouseholdInDB */
        HouseholdInDB: {
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            preferences?: components["schemas"]["ReadHouseholdPreferences"] | null;
            /** Group */
            group: string;
            /** Users */
            users?: components["schemas"]["HouseholdUserSummary"][] | null;
            /**
             * Webhooks
             * @default []
             */
            webhooks: components["schemas"]["ReadWebhook"][];
        };
        /** HouseholdPagination */
        HouseholdPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["HouseholdInDB"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** HouseholdRecipeSummary */
        HouseholdRecipeSummary: {
            /** Lastmade */
            lastMade?: string | null;
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
        };
        /** HouseholdStatistics */
        HouseholdStatistics: {
            /** Totalrecipes */
            totalRecipes: number;
            /** Totalusers */
            totalUsers: number;
            /** Totalcategories */
            totalCategories: number;
            /** Totaltags */
            totalTags: number;
            /** Totaltools */
            totalTools: number;
        };
        /** HouseholdSummary */
        HouseholdSummary: {
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            preferences?: components["schemas"]["ReadHouseholdPreferences"] | null;
        };
        /** HouseholdUserSummary */
        HouseholdUserSummary: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Fullname */
            fullName: string;
        };
        /**
         * ImageType
         * @enum {string}
         */
        ImageType: "original.webp" | "min-original.webp" | "tiny-original.webp";
        /** IngredientConfidence */
        IngredientConfidence: {
            /** Average */
            average?: number | null;
            /** Comment */
            comment?: number | null;
            /** Name */
            name?: number | null;
            /** Unit */
            unit?: number | null;
            /** Quantity */
            quantity?: number | null;
            /** Food */
            food?: number | null;
        };
        /** IngredientFood */
        "IngredientFood-Input": {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /** Pluralname */
            pluralName?: string | null;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Labelid */
            labelId?: string | null;
            /**
             * Aliases
             * @default []
             */
            aliases: components["schemas"]["IngredientFoodAlias"][];
            /**
             * Householdswithingredientfood
             * @default []
             */
            householdsWithIngredientFood: string[];
            label?: components["schemas"]["MultiPurposeLabelSummary"] | null;
            /** Createdat */
            createdAt?: string | null;
            /** Update At */
            update_at?: string | null;
        };
        /** IngredientFood */
        "IngredientFood-Output": {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /** Pluralname */
            pluralName?: string | null;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Labelid */
            labelId?: string | null;
            /**
             * Aliases
             * @default []
             */
            aliases: components["schemas"]["IngredientFoodAlias"][];
            /**
             * Householdswithingredientfood
             * @default []
             */
            householdsWithIngredientFood: string[];
            label?: components["schemas"]["MultiPurposeLabelSummary"] | null;
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
        };
        /** IngredientFoodAlias */
        IngredientFoodAlias: {
            /** Name */
            name: string;
        };
        /** IngredientFoodPagination */
        IngredientFoodPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["IngredientFood-Output"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /**
         * IngredientReferences
         * @description A list of ingredient references.
         */
        IngredientReferences: {
            /** Referenceid */
            referenceId?: string | null;
        };
        /** IngredientRequest */
        IngredientRequest: {
            /** @default nlp */
            parser: components["schemas"]["RegisteredParser"];
            /** Ingredient */
            ingredient: string;
        };
        /** IngredientUnit */
        "IngredientUnit-Input": {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /** Pluralname */
            pluralName?: string | null;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Fraction
             * @default true
             */
            fraction: boolean;
            /**
             * Abbreviation
             * @default
             */
            abbreviation: string;
            /**
             * Pluralabbreviation
             * @default
             */
            pluralAbbreviation: string | null;
            /**
             * Useabbreviation
             * @default false
             */
            useAbbreviation: boolean;
            /**
             * Aliases
             * @default []
             */
            aliases: components["schemas"]["IngredientUnitAlias"][];
            /** Createdat */
            createdAt?: string | null;
            /** Update At */
            update_at?: string | null;
        };
        /** IngredientUnit */
        "IngredientUnit-Output": {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /** Pluralname */
            pluralName?: string | null;
            /**
             * Description
             * @default
             */
            description: string;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Fraction
             * @default true
             */
            fraction: boolean;
            /**
             * Abbreviation
             * @default
             */
            abbreviation: string;
            /**
             * Pluralabbreviation
             * @default
             */
            pluralAbbreviation: string | null;
            /**
             * Useabbreviation
             * @default false
             */
            useAbbreviation: boolean;
            /**
             * Aliases
             * @default []
             */
            aliases: components["schemas"]["IngredientUnitAlias"][];
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
        };
        /** IngredientUnitAlias */
        IngredientUnitAlias: {
            /** Name */
            name: string;
        };
        /** IngredientUnitPagination */
        IngredientUnitPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["IngredientUnit-Output"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** IngredientsRequest */
        IngredientsRequest: {
            /** @default nlp */
            parser: components["schemas"]["RegisteredParser"];
            /** Ingredients */
            ingredients: string[];
        };
        /**
         * LogicalOperator
         * @enum {string}
         */
        LogicalOperator: "AND" | "OR";
        /**
         * LongLiveTokenCreateResponse
         * @description Should ONLY be used when creating a new token, as the token field is sensitive
         */
        LongLiveTokenCreateResponse: {
            /** Name */
            name: string;
            /** Id */
            id: number;
            /** Createdat */
            createdAt?: string | null;
            /** Token */
            token: string;
        };
        /** LongLiveTokenIn */
        LongLiveTokenIn: {
            /** Name */
            name: string;
            /**
             * Integrationid
             * @default generic
             */
            integrationId: string;
        };
        /** LongLiveTokenOut */
        LongLiveTokenOut: {
            /** Name */
            name: string;
            /** Id */
            id: number;
            /** Createdat */
            createdAt?: string | null;
        };
        /** MaintenanceStorageDetails */
        MaintenanceStorageDetails: {
            /** Tempdirsize */
            tempDirSize: string;
            /** Backupsdirsize */
            backupsDirSize: string;
            /** Groupsdirsize */
            groupsDirSize: string;
            /** Recipesdirsize */
            recipesDirSize: string;
            /** Userdirsize */
            userDirSize: string;
        };
        /** MaintenanceSummary */
        MaintenanceSummary: {
            /** Datadirsize */
            dataDirSize: string;
            /** Cleanableimages */
            cleanableImages: number;
            /** Cleanabledirs */
            cleanableDirs: number;
        };
        /** MergeFood */
        MergeFood: {
            /**
             * Fromfood
             * Format: uuid4
             */
            fromFood: string;
            /**
             * Tofood
             * Format: uuid4
             */
            toFood: string;
        };
        /** MergeUnit */
        MergeUnit: {
            /**
             * Fromunit
             * Format: uuid4
             */
            fromUnit: string;
            /**
             * Tounit
             * Format: uuid4
             */
            toUnit: string;
        };
        /** MultiPurposeLabelCreate */
        MultiPurposeLabelCreate: {
            /** Name */
            name: string;
            /**
             * Color
             * @default #959595
             */
            color: string;
        };
        /** MultiPurposeLabelOut */
        MultiPurposeLabelOut: {
            /** Name */
            name: string;
            /**
             * Color
             * @default #959595
             */
            color: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** MultiPurposeLabelPagination */
        MultiPurposeLabelPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["MultiPurposeLabelSummary"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** MultiPurposeLabelSummary */
        MultiPurposeLabelSummary: {
            /** Name */
            name: string;
            /**
             * Color
             * @default #959595
             */
            color: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** MultiPurposeLabelUpdate */
        MultiPurposeLabelUpdate: {
            /** Name */
            name: string;
            /**
             * Color
             * @default #959595
             */
            color: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** Nutrition */
        Nutrition: {
            /** Calories */
            calories?: string | null;
            /** Carbohydratecontent */
            carbohydrateContent?: string | null;
            /** Cholesterolcontent */
            cholesterolContent?: string | null;
            /** Fatcontent */
            fatContent?: string | null;
            /** Fibercontent */
            fiberContent?: string | null;
            /** Proteincontent */
            proteinContent?: string | null;
            /** Saturatedfatcontent */
            saturatedFatContent?: string | null;
            /** Sodiumcontent */
            sodiumContent?: string | null;
            /** Sugarcontent */
            sugarContent?: string | null;
            /** Transfatcontent */
            transFatContent?: string | null;
            /** Unsaturatedfatcontent */
            unsaturatedFatContent?: string | null;
        };
        /**
         * OrderByNullPosition
         * @enum {string}
         */
        OrderByNullPosition: "first" | "last";
        /**
         * OrderDirection
         * @enum {string}
         */
        OrderDirection: "asc" | "desc";
        /** PaginationBase[HouseholdSummary] */
        PaginationBase_HouseholdSummary_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["HouseholdSummary"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[IngredientFood] */
        PaginationBase_IngredientFood_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["IngredientFood-Output"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[ReadCookBook] */
        PaginationBase_ReadCookBook_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["ReadCookBook"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[RecipeCategory] */
        PaginationBase_RecipeCategory_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeCategory"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[RecipeSummary] */
        PaginationBase_RecipeSummary_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeSummary"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[RecipeTag] */
        PaginationBase_RecipeTag_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeTag"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[RecipeTool] */
        PaginationBase_RecipeTool_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeTool"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[UserOut] */
        PaginationBase_UserOut_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["UserOut"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** PaginationBase[UserSummary] */
        PaginationBase_UserSummary_: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["UserSummary"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** ParsedIngredient */
        ParsedIngredient: {
            /** Input */
            input?: string | null;
            /** @default {} */
            confidence: components["schemas"]["IngredientConfidence"];
            ingredient: components["schemas"]["RecipeIngredient-Output"];
        };
        /** PasswordResetToken */
        PasswordResetToken: {
            /** Token */
            token: string;
        };
        /** PlanEntryPagination */
        PlanEntryPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["ReadPlanEntry"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /**
         * PlanEntryType
         * @enum {string}
         */
        PlanEntryType: "breakfast" | "lunch" | "dinner" | "side";
        /** PlanRulesCreate */
        PlanRulesCreate: {
            /** @default unset */
            day: components["schemas"]["PlanRulesDay"];
            /** @default unset */
            entryType: components["schemas"]["PlanRulesType"];
            /**
             * Queryfilterstring
             * @default
             */
            queryFilterString: string;
        };
        /**
         * PlanRulesDay
         * @enum {string}
         */
        PlanRulesDay: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday" | "unset";
        /** PlanRulesOut */
        PlanRulesOut: {
            /** @default unset */
            day: components["schemas"]["PlanRulesDay"];
            /** @default unset */
            entryType: components["schemas"]["PlanRulesType"];
            /**
             * Queryfilterstring
             * @default
             */
            queryFilterString: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            queryFilter?: components["schemas"]["QueryFilterJSON"];
        };
        /** PlanRulesPagination */
        PlanRulesPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["PlanRulesOut"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /**
         * PlanRulesType
         * @enum {string}
         */
        PlanRulesType: "breakfast" | "lunch" | "dinner" | "side" | "unset";
        /** QueryFilterJSON */
        QueryFilterJSON: {
            /**
             * Parts
             * @default []
             */
            parts: components["schemas"]["QueryFilterJSONPart"][];
        };
        /** QueryFilterJSONPart */
        QueryFilterJSONPart: {
            /** Leftparenthesis */
            leftParenthesis?: string | null;
            /** Rightparenthesis */
            rightParenthesis?: string | null;
            logicalOperator?: components["schemas"]["LogicalOperator"] | null;
            /** Attributename */
            attributeName?: string | null;
            /** Relationaloperator */
            relationalOperator?: components["schemas"]["RelationalKeyword"] | components["schemas"]["RelationalOperator"] | null;
            /** Value */
            value?: string | string[] | null;
        };
        /** ReadCookBook */
        ReadCookBook: {
            /** Name */
            name: string;
            /**
             * Description
             * @default
             */
            description: string;
            /** Slug */
            slug?: string | null;
            /**
             * Position
             * @default 1
             */
            position: number;
            /**
             * Public
             * @default false
             */
            public: boolean;
            /**
             * Queryfilterstring
             * @default
             */
            queryFilterString: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            queryFilter?: components["schemas"]["QueryFilterJSON"];
        };
        /** ReadGroupPreferences */
        ReadGroupPreferences: {
            /**
             * Privategroup
             * @default true
             */
            privateGroup: boolean;
            /**
             * Groupid
             * Format: uuid
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** ReadHouseholdPreferences */
        ReadHouseholdPreferences: {
            /**
             * Privatehousehold
             * @default true
             */
            privateHousehold: boolean;
            /**
             * Lockrecipeeditsfromotherhouseholds
             * @default true
             */
            lockRecipeEditsFromOtherHouseholds: boolean;
            /**
             * Firstdayofweek
             * @default 0
             */
            firstDayOfWeek: number;
            /**
             * Recipepublic
             * @default true
             */
            recipePublic: boolean;
            /**
             * Recipeshownutrition
             * @default false
             */
            recipeShowNutrition: boolean;
            /**
             * Recipeshowassets
             * @default false
             */
            recipeShowAssets: boolean;
            /**
             * Recipelandscapeview
             * @default false
             */
            recipeLandscapeView: boolean;
            /**
             * Recipedisablecomments
             * @default false
             */
            recipeDisableComments: boolean;
            /**
             * Recipedisableamount
             * @default true
             */
            recipeDisableAmount: boolean;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** ReadInviteToken */
        ReadInviteToken: {
            /** Token */
            token: string;
            /** Usesleft */
            usesLeft: number;
            /**
             * Groupid
             * Format: uuid
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid
             */
            householdId: string;
        };
        /** ReadPlanEntry */
        ReadPlanEntry: {
            /**
             * Date
             * Format: date
             */
            date: string;
            /** @default breakfast */
            entryType: components["schemas"]["PlanEntryType"];
            /**
             * Title
             * @default
             */
            title: string;
            /**
             * Text
             * @default
             */
            text: string;
            /** Recipeid */
            recipeId?: string | null;
            /** Id */
            id: number;
            /**
             * Groupid
             * Format: uuid
             */
            groupId: string;
            /**
             * Userid
             * Format: uuid
             */
            userId: string;
            /**
             * Householdid
             * Format: uuid
             */
            householdId: string;
            recipe?: components["schemas"]["RecipeSummary"] | null;
        };
        /** ReadWebhook */
        ReadWebhook: {
            /**
             * Enabled
             * @default true
             */
            enabled: boolean;
            /**
             * Name
             * @default
             */
            name: string;
            /**
             * Url
             * @default
             */
            url: string;
            /** @default mealplan */
            webhookType: components["schemas"]["WebhookType"];
            /**
             * Scheduledtime
             * Format: time
             */
            scheduledTime: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** Recipe */
        "Recipe-Input": {
            /** Id */
            id?: string | null;
            /**
             * Userid
             * Format: uuid4
             */
            userId?: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId?: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId?: string;
            /** Name */
            name?: string | null;
            /**
             * Slug
             * @default
             */
            slug: string;
            /** Image */
            image?: unknown | null;
            /**
             * Recipeservings
             * @default 0
             */
            recipeServings: number;
            /**
             * Recipeyieldquantity
             * @default 0
             */
            recipeYieldQuantity: number;
            /** Recipeyield */
            recipeYield?: string | null;
            /** Totaltime */
            totalTime?: string | null;
            /** Preptime */
            prepTime?: string | null;
            /** Cooktime */
            cookTime?: string | null;
            /** Performtime */
            performTime?: string | null;
            /**
             * Description
             * @default
             */
            description: string | null;
            /**
             * Recipecategory
             * @default []
             */
            recipeCategory: components["schemas"]["RecipeCategory"][] | null;
            /**
             * Tags
             * @default []
             */
            tags: components["schemas"]["RecipeTag"][] | null;
            /**
             * Tools
             * @default []
             */
            tools: components["schemas"]["RecipeTool"][];
            /** Rating */
            rating?: number | null;
            /** Orgurl */
            orgURL?: string | null;
            /** Dateadded */
            dateAdded?: string | null;
            /** Dateupdated */
            dateUpdated?: string | null;
            /** Createdat */
            createdAt?: string | null;
            /** Update At */
            update_at?: string | null;
            /** Lastmade */
            lastMade?: string | null;
            /**
             * Recipeingredient
             * @default []
             */
            recipeIngredient: components["schemas"]["RecipeIngredient-Input"][];
            /**
             * Recipeinstructions
             * @default []
             */
            recipeInstructions: components["schemas"]["RecipeStep"][] | null;
            nutrition?: components["schemas"]["Nutrition"] | null;
            settings?: components["schemas"]["RecipeSettings"] | null;
            /**
             * Assets
             * @default []
             */
            assets: components["schemas"]["RecipeAsset"][] | null;
            /**
             * Notes
             * @default []
             */
            notes: components["schemas"]["RecipeNote"][] | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Comments
             * @default []
             */
            comments: components["schemas"]["RecipeCommentOut-Input"][] | null;
        };
        /** Recipe */
        "Recipe-Output": {
            /** Id */
            id?: string | null;
            /**
             * Userid
             * Format: uuid4
             */
            userId?: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId?: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId?: string;
            /** Name */
            name?: string | null;
            /**
             * Slug
             * @default
             */
            slug: string;
            /** Image */
            image?: unknown | null;
            /**
             * Recipeservings
             * @default 0
             */
            recipeServings: number;
            /**
             * Recipeyieldquantity
             * @default 0
             */
            recipeYieldQuantity: number;
            /** Recipeyield */
            recipeYield?: string | null;
            /** Totaltime */
            totalTime?: string | null;
            /** Preptime */
            prepTime?: string | null;
            /** Cooktime */
            cookTime?: string | null;
            /** Performtime */
            performTime?: string | null;
            /**
             * Description
             * @default
             */
            description: string | null;
            /**
             * Recipecategory
             * @default []
             */
            recipeCategory: components["schemas"]["RecipeCategory"][] | null;
            /**
             * Tags
             * @default []
             */
            tags: components["schemas"]["RecipeTag"][] | null;
            /**
             * Tools
             * @default []
             */
            tools: components["schemas"]["RecipeTool"][];
            /** Rating */
            rating?: number | null;
            /** Orgurl */
            orgURL?: string | null;
            /** Dateadded */
            dateAdded?: string | null;
            /** Dateupdated */
            dateUpdated?: string | null;
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
            /** Lastmade */
            lastMade?: string | null;
            /**
             * Recipeingredient
             * @default []
             */
            recipeIngredient: components["schemas"]["RecipeIngredient-Output"][];
            /**
             * Recipeinstructions
             * @default []
             */
            recipeInstructions: components["schemas"]["RecipeStep"][] | null;
            nutrition?: components["schemas"]["Nutrition"] | null;
            settings?: components["schemas"]["RecipeSettings"] | null;
            /**
             * Assets
             * @default []
             */
            assets: components["schemas"]["RecipeAsset"][] | null;
            /**
             * Notes
             * @default []
             */
            notes: components["schemas"]["RecipeNote"][] | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Comments
             * @default []
             */
            comments: components["schemas"]["RecipeCommentOut-Output"][] | null;
        };
        /** RecipeAsset */
        RecipeAsset: {
            /** Name */
            name: string;
            /** Icon */
            icon: string;
            /** Filename */
            fileName?: string | null;
        };
        /** RecipeCategory */
        RecipeCategory: {
            /** Id */
            id?: string | null;
            /** Name */
            name: string;
            /** Slug */
            slug: string;
        };
        /** RecipeCategoryPagination */
        RecipeCategoryPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeCategory"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** RecipeCommentCreate */
        RecipeCommentCreate: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Text */
            text: string;
        };
        /** RecipeCommentOut */
        "RecipeCommentOut-Input": {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Text */
            text: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Update At
             * Format: date-time
             */
            update_at: string;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            user: components["schemas"]["mealie__schema__recipe__recipe_comments__UserBase"];
        };
        /** RecipeCommentOut */
        "RecipeCommentOut-Output": {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Text */
            text: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Updatedat
             * Format: date-time
             */
            updatedAt: string;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            user: components["schemas"]["UserBase-Output"];
        };
        /** RecipeCommentPagination */
        RecipeCommentPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeCommentOut-Output"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** RecipeCommentUpdate */
        RecipeCommentUpdate: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Text */
            text: string;
        };
        /** RecipeCookBook */
        RecipeCookBook: {
            /** Name */
            name: string;
            /**
             * Description
             * @default
             */
            description: string;
            /** Slug */
            slug?: string | null;
            /**
             * Position
             * @default 1
             */
            position: number;
            /**
             * Public
             * @default false
             */
            public: boolean;
            /**
             * Queryfilterstring
             * @default
             */
            queryFilterString: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            queryFilter?: components["schemas"]["QueryFilterJSON"];
            /** Recipes */
            recipes: components["schemas"]["RecipeSummary"][];
        };
        /** RecipeDuplicate */
        RecipeDuplicate: {
            /** Name */
            name?: string | null;
        };
        /** RecipeIngredient */
        "RecipeIngredient-Input": {
            /**
             * Quantity
             * @default 1
             */
            quantity: number | null;
            /** Unit */
            unit?: components["schemas"]["IngredientUnit-Input"] | components["schemas"]["CreateIngredientUnit"] | null;
            /** Food */
            food?: components["schemas"]["IngredientFood-Input"] | components["schemas"]["CreateIngredientFood"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /** Isfood */
            isFood?: boolean | null;
            /**
             * Disableamount
             * @default true
             */
            disableAmount: boolean;
            /**
             * Display
             * @default
             */
            display: string;
            /** Title */
            title?: string | null;
            /** Originaltext */
            originalText?: string | null;
            /**
             * Referenceid
             * Format: uuid
             */
            referenceId?: string;
        };
        /** RecipeIngredient */
        "RecipeIngredient-Output": {
            /**
             * Quantity
             * @default 1
             */
            quantity: number | null;
            /** Unit */
            unit?: components["schemas"]["IngredientUnit-Output"] | components["schemas"]["CreateIngredientUnit"] | null;
            /** Food */
            food?: components["schemas"]["IngredientFood-Output"] | components["schemas"]["CreateIngredientFood"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /** Isfood */
            isFood?: boolean | null;
            /**
             * Disableamount
             * @default true
             */
            disableAmount: boolean;
            /**
             * Display
             * @default
             */
            display: string;
            /** Title */
            title?: string | null;
            /** Originaltext */
            originalText?: string | null;
            /**
             * Referenceid
             * Format: uuid
             */
            referenceId?: string;
        };
        /** RecipeLastMade */
        RecipeLastMade: {
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
        };
        /** RecipeNote */
        RecipeNote: {
            /** Title */
            title: string;
            /** Text */
            text: string;
        };
        /** RecipeSettings */
        RecipeSettings: {
            /**
             * Public
             * @default false
             */
            public: boolean;
            /**
             * Shownutrition
             * @default false
             */
            showNutrition: boolean;
            /**
             * Showassets
             * @default false
             */
            showAssets: boolean;
            /**
             * Landscapeview
             * @default false
             */
            landscapeView: boolean;
            /**
             * Disablecomments
             * @default true
             */
            disableComments: boolean;
            /**
             * Disableamount
             * @default true
             */
            disableAmount: boolean;
            /**
             * Locked
             * @default false
             */
            locked: boolean;
        };
        /** RecipeShareToken */
        RecipeShareToken: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Expiresat
             * Format: date-time
             */
            expiresAt?: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            recipe: components["schemas"]["Recipe-Output"];
        };
        /** RecipeShareTokenCreate */
        RecipeShareTokenCreate: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Expiresat
             * Format: date-time
             */
            expiresAt?: string;
        };
        /** RecipeShareTokenSummary */
        RecipeShareTokenSummary: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Expiresat
             * Format: date-time
             */
            expiresAt?: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
        };
        /** RecipeStep */
        RecipeStep: {
            /** Id */
            id?: string | null;
            /**
             * Title
             * @default
             */
            title: string | null;
            /**
             * Summary
             * @default
             */
            summary: string | null;
            /** Text */
            text: string;
            /**
             * Ingredientreferences
             * @default []
             */
            ingredientReferences: components["schemas"]["IngredientReferences"][];
        };
        /** RecipeSuggestionResponse */
        RecipeSuggestionResponse: {
            /** Items */
            items: components["schemas"]["RecipeSuggestionResponseItem"][];
        };
        /** RecipeSuggestionResponseItem */
        RecipeSuggestionResponseItem: {
            recipe: components["schemas"]["RecipeSummary"];
            /** Missingfoods */
            missingFoods: components["schemas"]["IngredientFood-Output"][];
            /** Missingtools */
            missingTools: components["schemas"]["RecipeTool"][];
        };
        /** RecipeSummary */
        RecipeSummary: {
            /** Id */
            id?: string | null;
            /**
             * Userid
             * Format: uuid4
             */
            userId?: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId?: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId?: string;
            /** Name */
            name?: string | null;
            /**
             * Slug
             * @default
             */
            slug: string;
            /** Image */
            image?: unknown | null;
            /**
             * Recipeservings
             * @default 0
             */
            recipeServings: number;
            /**
             * Recipeyieldquantity
             * @default 0
             */
            recipeYieldQuantity: number;
            /** Recipeyield */
            recipeYield?: string | null;
            /** Totaltime */
            totalTime?: string | null;
            /** Preptime */
            prepTime?: string | null;
            /** Cooktime */
            cookTime?: string | null;
            /** Performtime */
            performTime?: string | null;
            /**
             * Description
             * @default
             */
            description: string | null;
            /**
             * Recipecategory
             * @default []
             */
            recipeCategory: components["schemas"]["RecipeCategory"][] | null;
            /**
             * Tags
             * @default []
             */
            tags: components["schemas"]["RecipeTag"][] | null;
            /**
             * Tools
             * @default []
             */
            tools: components["schemas"]["RecipeTool"][];
            /** Rating */
            rating?: number | null;
            /** Orgurl */
            orgURL?: string | null;
            /** Dateadded */
            dateAdded?: string | null;
            /** Dateupdated */
            dateUpdated?: string | null;
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
            /** Lastmade */
            lastMade?: string | null;
        };
        /** RecipeTag */
        RecipeTag: {
            /** Id */
            id?: string | null;
            /** Name */
            name: string;
            /** Slug */
            slug: string;
        };
        /** RecipeTagPagination */
        RecipeTagPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeTag"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** RecipeTagResponse */
        RecipeTagResponse: {
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            /**
             * Recipes
             * @default []
             */
            recipes: components["schemas"]["RecipeSummary"][];
        };
        /** RecipeTimelineEventIn */
        RecipeTimelineEventIn: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Userid */
            userId?: string | null;
            /** Subject */
            subject: string;
            eventType: components["schemas"]["TimelineEventType"];
            /** Eventmessage */
            eventMessage?: string | null;
            /** @default does not have image */
            image: components["schemas"]["TimelineEventImage"] | null;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-03-26T13:09:21.668555Z
             */
            timestamp: string;
        };
        /** RecipeTimelineEventOut */
        RecipeTimelineEventOut: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            /** Subject */
            subject: string;
            eventType: components["schemas"]["TimelineEventType"];
            /** Eventmessage */
            eventMessage?: string | null;
            /** @default does not have image */
            image: components["schemas"]["TimelineEventImage"] | null;
            /**
             * Timestamp
             * Format: date-time
             * @default 2025-03-26T13:09:21.668555Z
             */
            timestamp: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Updatedat
             * Format: date-time
             */
            updatedAt: string;
        };
        /** RecipeTimelineEventPagination */
        RecipeTimelineEventPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeTimelineEventOut"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** RecipeTimelineEventUpdate */
        RecipeTimelineEventUpdate: {
            /** Subject */
            subject: string;
            /** Eventmessage */
            eventMessage?: string | null;
            image?: components["schemas"]["TimelineEventImage"] | null;
        };
        /** RecipeTool */
        RecipeTool: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /** Slug */
            slug: string;
            /**
             * Householdswithtool
             * @default []
             */
            householdsWithTool: string[];
        };
        /** RecipeToolCreate */
        RecipeToolCreate: {
            /** Name */
            name: string;
            /**
             * Householdswithtool
             * @default []
             */
            householdsWithTool: string[];
        };
        /** RecipeToolOut */
        RecipeToolOut: {
            /** Name */
            name: string;
            /**
             * Householdswithtool
             * @default []
             */
            householdsWithTool: string[];
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
        };
        /** RecipeToolPagination */
        RecipeToolPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["RecipeTool"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** RecipeToolResponse */
        RecipeToolResponse: {
            /** Name */
            name: string;
            /**
             * Householdswithtool
             * @default []
             */
            householdsWithTool: string[];
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
            /**
             * Recipes
             * @default []
             */
            recipes: components["schemas"]["RecipeSummary"][];
        };
        /** RecipeZipTokenResponse */
        RecipeZipTokenResponse: {
            /** Token */
            token: string;
        };
        /**
         * RegisteredParser
         * @enum {string}
         */
        RegisteredParser: "nlp" | "brute" | "openai";
        /**
         * RelationalKeyword
         * @enum {string}
         */
        RelationalKeyword: "IS" | "IS NOT" | "IN" | "NOT IN" | "CONTAINS ALL" | "LIKE" | "NOT LIKE";
        /**
         * RelationalOperator
         * @enum {string}
         */
        RelationalOperator: "=" | "<>" | ">" | "<" | ">=" | "<=";
        /**
         * ReportCategory
         * @enum {string}
         */
        ReportCategory: "backup" | "restore" | "migration" | "bulk_import";
        /** ReportEntryOut */
        ReportEntryOut: {
            /**
             * Reportid
             * Format: uuid4
             */
            reportId: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Message */
            message: string;
            /**
             * Exception
             * @default
             */
            exception: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** ReportOut */
        ReportOut: {
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            category: components["schemas"]["ReportCategory"];
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Name */
            name: string;
            /** @default in-progress */
            status: components["schemas"]["ReportSummaryStatus"];
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Entries
             * @default []
             */
            entries: components["schemas"]["ReportEntryOut"][];
        };
        /** ReportSummary */
        ReportSummary: {
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            category: components["schemas"]["ReportCategory"];
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Name */
            name: string;
            /** @default in-progress */
            status: components["schemas"]["ReportSummaryStatus"];
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /**
         * ReportSummaryStatus
         * @enum {string}
         */
        ReportSummaryStatus: "in-progress" | "success" | "failure" | "partial";
        /** ResetPassword */
        ResetPassword: {
            /** Token */
            token: string;
            /** Email */
            email: string;
            /** Password */
            password: string;
            /** Passwordconfirm */
            passwordConfirm: string;
        };
        /** SaveGroupRecipeAction */
        SaveGroupRecipeAction: {
            actionType: components["schemas"]["GroupRecipeActionType"];
            /** Title */
            title: string;
            /** Url */
            url: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
        };
        /**
         * ScrapeRecipe
         * @example {
         *       "includeTags": true,
         *       "url": "https://myfavoriterecipes.com/recipes"
         *     }
         */
        ScrapeRecipe: {
            /**
             * Includetags
             * @default false
             */
            includeTags: boolean;
            /** Url */
            url: string;
        };
        /** ScrapeRecipeData */
        ScrapeRecipeData: {
            /**
             * Includetags
             * @default false
             */
            includeTags: boolean;
            /** Data */
            data: string;
        };
        /** ScrapeRecipeTest */
        ScrapeRecipeTest: {
            /** Url */
            url: string;
            /**
             * Useopenai
             * @default false
             */
            useOpenAI: boolean;
        };
        /** SeederConfig */
        SeederConfig: {
            /** Locale */
            locale: string;
        };
        /** SetPermissions */
        SetPermissions: {
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            /**
             * Canmanagehousehold
             * @default false
             */
            canManageHousehold: boolean;
            /**
             * Canmanage
             * @default false
             */
            canManage: boolean;
            /**
             * Caninvite
             * @default false
             */
            canInvite: boolean;
            /**
             * Canorganize
             * @default false
             */
            canOrganize: boolean;
        };
        /** ShoppingListAddRecipeParams */
        ShoppingListAddRecipeParams: {
            /**
             * Recipeincrementquantity
             * @default 1
             */
            recipeIncrementQuantity: number;
            /** Recipeingredients */
            recipeIngredients?: components["schemas"]["RecipeIngredient-Input"][] | null;
        };
        /** ShoppingListAddRecipeParamsBulk */
        ShoppingListAddRecipeParamsBulk: {
            /**
             * Recipeincrementquantity
             * @default 1
             */
            recipeIncrementQuantity: number;
            /** Recipeingredients */
            recipeIngredients?: components["schemas"]["RecipeIngredient-Input"][] | null;
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
        };
        /** ShoppingListCreate */
        ShoppingListCreate: {
            /** Name */
            name?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Createdat */
            createdAt?: string | null;
            /** Update At */
            update_at?: string | null;
        };
        /** ShoppingListItemCreate */
        ShoppingListItemCreate: {
            /**
             * Quantity
             * @default 1
             */
            quantity: number;
            /** Unit */
            unit?: components["schemas"]["IngredientUnit-Input"] | components["schemas"]["CreateIngredientUnit"] | null;
            /** Food */
            food?: components["schemas"]["IngredientFood-Input"] | components["schemas"]["CreateIngredientFood"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /**
             * Isfood
             * @default false
             */
            isFood: boolean;
            /** Disableamount */
            disableAmount?: boolean | null;
            /**
             * Display
             * @default
             */
            display: string;
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Checked
             * @default false
             */
            checked: boolean;
            /**
             * Position
             * @default 0
             */
            position: number;
            /** Foodid */
            foodId?: string | null;
            /** Labelid */
            labelId?: string | null;
            /** Unitid */
            unitId?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Id */
            id?: string | null;
            /**
             * Recipereferences
             * @default []
             */
            recipeReferences: components["schemas"]["ShoppingListItemRecipeRefCreate"][];
        };
        /** ShoppingListItemOut */
        "ShoppingListItemOut-Input": {
            /**
             * Quantity
             * @default 1
             */
            quantity: number;
            unit?: components["schemas"]["IngredientUnit-Input"] | null;
            food?: components["schemas"]["IngredientFood-Input"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /**
             * Isfood
             * @default false
             */
            isFood: boolean;
            /** Disableamount */
            disableAmount?: boolean | null;
            /**
             * Display
             * @default
             */
            display: string;
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Checked
             * @default false
             */
            checked: boolean;
            /**
             * Position
             * @default 0
             */
            position: number;
            /** Foodid */
            foodId?: string | null;
            /** Labelid */
            labelId?: string | null;
            /** Unitid */
            unitId?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            label?: components["schemas"]["MultiPurposeLabelSummary"] | null;
            /**
             * Recipereferences
             * @default []
             */
            recipeReferences: components["schemas"]["ShoppingListItemRecipeRefOut"][];
            /** Createdat */
            createdAt?: string | null;
            /** Update At */
            update_at?: string | null;
        };
        /** ShoppingListItemOut */
        "ShoppingListItemOut-Output": {
            /**
             * Quantity
             * @default 1
             */
            quantity: number;
            unit?: components["schemas"]["IngredientUnit-Output"] | null;
            food?: components["schemas"]["IngredientFood-Output"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /**
             * Isfood
             * @default false
             */
            isFood: boolean;
            /** Disableamount */
            disableAmount?: boolean | null;
            /**
             * Display
             * @default
             */
            display: string;
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Checked
             * @default false
             */
            checked: boolean;
            /**
             * Position
             * @default 0
             */
            position: number;
            /** Foodid */
            foodId?: string | null;
            /** Labelid */
            labelId?: string | null;
            /** Unitid */
            unitId?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            label?: components["schemas"]["MultiPurposeLabelSummary"] | null;
            /**
             * Recipereferences
             * @default []
             */
            recipeReferences: components["schemas"]["ShoppingListItemRecipeRefOut"][];
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
        };
        /** ShoppingListItemPagination */
        ShoppingListItemPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["ShoppingListItemOut-Output"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** ShoppingListItemRecipeRefCreate */
        ShoppingListItemRecipeRefCreate: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Recipequantity
             * @default 0
             */
            recipeQuantity: number;
            /**
             * Recipescale
             * @default 1
             */
            recipeScale: number | null;
            /** Recipenote */
            recipeNote?: string | null;
        };
        /** ShoppingListItemRecipeRefOut */
        ShoppingListItemRecipeRefOut: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Recipequantity
             * @default 0
             */
            recipeQuantity: number;
            /**
             * Recipescale
             * @default 1
             */
            recipeScale: number | null;
            /** Recipenote */
            recipeNote?: string | null;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Shoppinglistitemid
             * Format: uuid4
             */
            shoppingListItemId: string;
        };
        /** ShoppingListItemRecipeRefUpdate */
        ShoppingListItemRecipeRefUpdate: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /**
             * Recipequantity
             * @default 0
             */
            recipeQuantity: number;
            /**
             * Recipescale
             * @default 1
             */
            recipeScale: number | null;
            /** Recipenote */
            recipeNote?: string | null;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Shoppinglistitemid
             * Format: uuid4
             */
            shoppingListItemId: string;
        };
        /** ShoppingListItemUpdate */
        ShoppingListItemUpdate: {
            /**
             * Quantity
             * @default 1
             */
            quantity: number;
            /** Unit */
            unit?: components["schemas"]["IngredientUnit-Input"] | components["schemas"]["CreateIngredientUnit"] | null;
            /** Food */
            food?: components["schemas"]["IngredientFood-Input"] | components["schemas"]["CreateIngredientFood"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /**
             * Isfood
             * @default false
             */
            isFood: boolean;
            /** Disableamount */
            disableAmount?: boolean | null;
            /**
             * Display
             * @default
             */
            display: string;
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Checked
             * @default false
             */
            checked: boolean;
            /**
             * Position
             * @default 0
             */
            position: number;
            /** Foodid */
            foodId?: string | null;
            /** Labelid */
            labelId?: string | null;
            /** Unitid */
            unitId?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Recipereferences
             * @default []
             */
            recipeReferences: (components["schemas"]["ShoppingListItemRecipeRefCreate"] | components["schemas"]["ShoppingListItemRecipeRefUpdate"])[];
        };
        /**
         * ShoppingListItemUpdateBulk
         * @description Only used for bulk update operations where the shopping list item id isn't already supplied
         */
        ShoppingListItemUpdateBulk: {
            /**
             * Quantity
             * @default 1
             */
            quantity: number;
            /** Unit */
            unit?: components["schemas"]["IngredientUnit-Input"] | components["schemas"]["CreateIngredientUnit"] | null;
            /** Food */
            food?: components["schemas"]["IngredientFood-Input"] | components["schemas"]["CreateIngredientFood"] | null;
            /**
             * Note
             * @default
             */
            note: string | null;
            /**
             * Isfood
             * @default false
             */
            isFood: boolean;
            /** Disableamount */
            disableAmount?: boolean | null;
            /**
             * Display
             * @default
             */
            display: string;
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Checked
             * @default false
             */
            checked: boolean;
            /**
             * Position
             * @default 0
             */
            position: number;
            /** Foodid */
            foodId?: string | null;
            /** Labelid */
            labelId?: string | null;
            /** Unitid */
            unitId?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /**
             * Recipereferences
             * @default []
             */
            recipeReferences: (components["schemas"]["ShoppingListItemRecipeRefCreate"] | components["schemas"]["ShoppingListItemRecipeRefUpdate"])[];
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /**
         * ShoppingListItemsCollectionOut
         * @description Container for bulk shopping list item changes
         */
        ShoppingListItemsCollectionOut: {
            /**
             * Createditems
             * @default []
             */
            createdItems: components["schemas"]["ShoppingListItemOut-Output"][];
            /**
             * Updateditems
             * @default []
             */
            updatedItems: components["schemas"]["ShoppingListItemOut-Output"][];
            /**
             * Deleteditems
             * @default []
             */
            deletedItems: components["schemas"]["ShoppingListItemOut-Output"][];
        };
        /** ShoppingListMultiPurposeLabelOut */
        ShoppingListMultiPurposeLabelOut: {
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Labelid
             * Format: uuid4
             */
            labelId: string;
            /**
             * Position
             * @default 0
             */
            position: number;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            label: components["schemas"]["MultiPurposeLabelSummary"];
        };
        /** ShoppingListMultiPurposeLabelUpdate */
        ShoppingListMultiPurposeLabelUpdate: {
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Labelid
             * Format: uuid4
             */
            labelId: string;
            /**
             * Position
             * @default 0
             */
            position: number;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** ShoppingListOut */
        ShoppingListOut: {
            /** Name */
            name?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Listitems
             * @default []
             */
            listItems: components["schemas"]["ShoppingListItemOut-Output"][];
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Recipereferences
             * @default []
             */
            recipeReferences: components["schemas"]["ShoppingListRecipeRefOut"][];
            /**
             * Labelsettings
             * @default []
             */
            labelSettings: components["schemas"]["ShoppingListMultiPurposeLabelOut"][];
        };
        /** ShoppingListPagination */
        ShoppingListPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["ShoppingListSummary"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** ShoppingListRecipeRefOut */
        ShoppingListRecipeRefOut: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Shoppinglistid
             * Format: uuid4
             */
            shoppingListId: string;
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Recipequantity */
            recipeQuantity: number;
            recipe: components["schemas"]["RecipeSummary"];
        };
        /** ShoppingListRemoveRecipeParams */
        ShoppingListRemoveRecipeParams: {
            /**
             * Recipedecrementquantity
             * @default 1
             */
            recipeDecrementQuantity: number;
        };
        /** ShoppingListSummary */
        ShoppingListSummary: {
            /** Name */
            name?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Createdat */
            createdAt?: string | null;
            /** Updatedat */
            updatedAt?: string | null;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /** Recipereferences */
            recipeReferences: components["schemas"]["ShoppingListRecipeRefOut"][];
            /** Labelsettings */
            labelSettings: components["schemas"]["ShoppingListMultiPurposeLabelOut"][];
        };
        /** ShoppingListUpdate */
        ShoppingListUpdate: {
            /** Name */
            name?: string | null;
            /**
             * Extras
             * @default {}
             */
            extras: Record<string, never> | null;
            /** Createdat */
            createdAt?: string | null;
            /** Update At */
            update_at?: string | null;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Listitems
             * @default []
             */
            listItems: components["schemas"]["ShoppingListItemOut-Input"][];
        };
        /** SuccessResponse */
        SuccessResponse: {
            /** Message */
            message: string;
            /**
             * Error
             * @default false
             */
            error: boolean;
        };
        /**
         * SupportedMigrations
         * @enum {string}
         */
        SupportedMigrations: "nextcloud" | "chowdown" | "copymethat" | "paprika" | "mealie_alpha" | "tandoor" | "plantoeat" | "myrecipebox" | "recipekeeper";
        /** TagBase */
        TagBase: {
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
        };
        /** TagIn */
        TagIn: {
            /** Name */
            name: string;
        };
        /** TagOut */
        TagOut: {
            /** Name */
            name: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Slug */
            slug: string;
        };
        /**
         * TimelineEventImage
         * @enum {string}
         */
        TimelineEventImage: "has image" | "does not have image";
        /**
         * TimelineEventType
         * @enum {string}
         */
        TimelineEventType: "system" | "info" | "comment";
        /** UnlockResults */
        UnlockResults: {
            /**
             * Unlocked
             * @default 0
             */
            unlocked: number;
        };
        /** UpdateCookBook */
        UpdateCookBook: {
            /** Name */
            name: string;
            /**
             * Description
             * @default
             */
            description: string;
            /** Slug */
            slug?: string | null;
            /**
             * Position
             * @default 1
             */
            position: number;
            /**
             * Public
             * @default false
             */
            public: boolean;
            /**
             * Queryfilterstring
             * @default
             */
            queryFilterString: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** UpdateGroupPreferences */
        UpdateGroupPreferences: {
            /**
             * Privategroup
             * @default true
             */
            privateGroup: boolean;
        };
        /** UpdateHouseholdAdmin */
        UpdateHouseholdAdmin: {
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            preferences?: components["schemas"]["UpdateHouseholdPreferences"] | null;
        };
        /** UpdateHouseholdPreferences */
        UpdateHouseholdPreferences: {
            /**
             * Privatehousehold
             * @default true
             */
            privateHousehold: boolean;
            /**
             * Lockrecipeeditsfromotherhouseholds
             * @default true
             */
            lockRecipeEditsFromOtherHouseholds: boolean;
            /**
             * Firstdayofweek
             * @default 0
             */
            firstDayOfWeek: number;
            /**
             * Recipepublic
             * @default true
             */
            recipePublic: boolean;
            /**
             * Recipeshownutrition
             * @default false
             */
            recipeShowNutrition: boolean;
            /**
             * Recipeshowassets
             * @default false
             */
            recipeShowAssets: boolean;
            /**
             * Recipelandscapeview
             * @default false
             */
            recipeLandscapeView: boolean;
            /**
             * Recipedisablecomments
             * @default false
             */
            recipeDisableComments: boolean;
            /**
             * Recipedisableamount
             * @default true
             */
            recipeDisableAmount: boolean;
        };
        /** UpdateImageResponse */
        UpdateImageResponse: {
            /** Image */
            image: string;
        };
        /** UpdatePlanEntry */
        UpdatePlanEntry: {
            /**
             * Date
             * Format: date
             */
            date: string;
            /** @default breakfast */
            entryType: components["schemas"]["PlanEntryType"];
            /**
             * Title
             * @default
             */
            title: string;
            /**
             * Text
             * @default
             */
            text: string;
            /** Recipeid */
            recipeId?: string | null;
            /** Id */
            id: number;
            /**
             * Groupid
             * Format: uuid
             */
            groupId: string;
            /**
             * Userid
             * Format: uuid
             */
            userId: string;
        };
        /** UserBase */
        "UserBase-Output": {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Username */
            username?: string | null;
            /** Admin */
            admin: boolean;
            /** Fullname */
            fullName?: string | null;
        };
        /**
         * UserIn
         * @example {
         *       "admin": "false",
         *       "email": "changeme@example.com",
         *       "fullName": "Change Me",
         *       "group": "Home",
         *       "household": "Family",
         *       "username": "ChangeMe"
         *     }
         */
        UserIn: {
            /** Id */
            id?: string | null;
            /** Username */
            username: string;
            /** Fullname */
            fullName: string;
            /** Email */
            email: string;
            /** @default Mealie */
            authMethod: components["schemas"]["AuthMethod"];
            /**
             * Admin
             * @default false
             */
            admin: boolean;
            /** Group */
            group?: string | null;
            /** Household */
            household?: string | null;
            /**
             * Advanced
             * @default false
             */
            advanced: boolean;
            /**
             * Caninvite
             * @default false
             */
            canInvite: boolean;
            /**
             * Canmanage
             * @default false
             */
            canManage: boolean;
            /**
             * Canmanagehousehold
             * @default false
             */
            canManageHousehold: boolean;
            /**
             * Canorganize
             * @default false
             */
            canOrganize: boolean;
            /** Password */
            password: string;
        };
        /**
         * UserOut
         * @example {
         *       "admin": "false",
         *       "email": "changeme@example.com",
         *       "fullName": "Change Me",
         *       "group": "Home",
         *       "household": "Family",
         *       "username": "ChangeMe"
         *     }
         */
        UserOut: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Username */
            username?: string | null;
            /** Fullname */
            fullName?: string | null;
            /** Email */
            email: string;
            /** @default Mealie */
            authMethod: components["schemas"]["AuthMethod"];
            /**
             * Admin
             * @default false
             */
            admin: boolean;
            /** Group */
            group: string;
            /** Household */
            household: string;
            /**
             * Advanced
             * @default false
             */
            advanced: boolean;
            /**
             * Caninvite
             * @default false
             */
            canInvite: boolean;
            /**
             * Canmanage
             * @default false
             */
            canManage: boolean;
            /**
             * Canmanagehousehold
             * @default false
             */
            canManageHousehold: boolean;
            /**
             * Canorganize
             * @default false
             */
            canOrganize: boolean;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /** Groupslug */
            groupSlug: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /** Householdslug */
            householdSlug: string;
            /** Tokens */
            tokens?: components["schemas"]["LongLiveTokenOut"][] | null;
            /** Cachekey */
            cacheKey: string;
        };
        /** UserPagination */
        UserPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["UserOut"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /** UserRatingOut */
        UserRatingOut: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Rating */
            rating?: number | null;
            /**
             * Isfavorite
             * @default false
             */
            isFavorite: boolean;
            /**
             * Userid
             * Format: uuid4
             */
            userId: string;
            /**
             * Id
             * Format: uuid4
             */
            id: string;
        };
        /** UserRatingSummary */
        UserRatingSummary: {
            /**
             * Recipeid
             * Format: uuid4
             */
            recipeId: string;
            /** Rating */
            rating?: number | null;
            /**
             * Isfavorite
             * @default false
             */
            isFavorite: boolean;
        };
        /** UserRatingUpdate */
        UserRatingUpdate: {
            /** Rating */
            rating?: number | null;
            /** Isfavorite */
            isFavorite?: boolean | null;
        };
        /** UserRatings[UserRatingOut] */
        UserRatings_UserRatingOut_: {
            /** Ratings */
            ratings: components["schemas"]["UserRatingOut"][];
        };
        /** UserRatings[UserRatingSummary] */
        UserRatings_UserRatingSummary_: {
            /** Ratings */
            ratings: components["schemas"]["UserRatingSummary"][];
        };
        /** UserSummary */
        UserSummary: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /**
             * Groupid
             * Format: uuid4
             */
            groupId: string;
            /**
             * Householdid
             * Format: uuid4
             */
            householdId: string;
            /** Username */
            username: string;
            /** Fullname */
            fullName: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** WebhookPagination */
        WebhookPagination: {
            /**
             * Page
             * @default 1
             */
            page: number;
            /**
             * Per Page
             * @default 10
             */
            per_page: number;
            /**
             * Total
             * @default 0
             */
            total: number;
            /**
             * Total Pages
             * @default 0
             */
            total_pages: number;
            /** Items */
            items: components["schemas"]["ReadWebhook"][];
            /** Next */
            next?: string | null;
            /** Previous */
            previous?: string | null;
        };
        /**
         * WebhookType
         * @enum {string}
         */
        WebhookType: "mealplan";
        /** UserBase */
        mealie__schema__recipe__recipe_comments__UserBase: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Username */
            username?: string | null;
            /** Admin */
            admin: boolean;
            /** Fullname */
            fullName?: string | null;
        };
        /**
         * UserBase
         * @example {
         *       "admin": "false",
         *       "email": "changeme@example.com",
         *       "fullName": "Change Me",
         *       "group": "Home",
         *       "household": "Family",
         *       "username": "ChangeMe"
         *     }
         */
        mealie__schema__user__user__UserBase: {
            /** Id */
            id?: string | null;
            /** Username */
            username?: string | null;
            /** Fullname */
            fullName?: string | null;
            /** Email */
            email: string;
            /** @default Mealie */
            authMethod: components["schemas"]["AuthMethod"];
            /**
             * Admin
             * @default false
             */
            admin: boolean;
            /** Group */
            group?: string | null;
            /** Household */
            household?: string | null;
            /**
             * Advanced
             * @default false
             */
            advanced: boolean;
            /**
             * Caninvite
             * @default false
             */
            canInvite: boolean;
            /**
             * Canmanage
             * @default false
             */
            canManage: boolean;
            /**
             * Canmanagehousehold
             * @default false
             */
            canManageHousehold: boolean;
            /**
             * Canorganize
             * @default false
             */
            canOrganize: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_app_info_api_app_about_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppInfo"];
                };
            };
        };
    };
    get_startup_info_api_app_about_startup_info_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppStartupInfo"];
                };
            };
        };
    };
    get_app_theme_api_app_about_theme_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppTheme"];
                };
            };
        };
    };
    get_token_api_auth_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_get_token_api_auth_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    oauth_login_api_auth_oauth_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_callback_api_auth_oauth_callback_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    refresh_token_api_auth_refresh_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    logout_api_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    register_new_user_api_users_register_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserRegistration"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_logged_in_user_api_users_self_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_logged_in_user_ratings_api_users_self_ratings_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRatings_UserRatingSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_logged_in_user_rating_for_recipe_api_users_self_ratings__recipe_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                recipe_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRatingSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_logged_in_user_favorites_api_users_self_favorites_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRatings_UserRatingSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_password_api_users_password_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ChangePassword"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_api_users__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_api_users__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["mealie__schema__user__user__UserBase"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_api_users__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_users_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_user_api_users_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    forgot_password_api_users_forgot_password_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ForgotPassword"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reset_password_api_users_reset_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResetPassword"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_image_api_users__id__image_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_update_user_image_api_users__id__image_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_api_token_api_users_api_tokens_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LongLiveTokenIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LongLiveTokenCreateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_api_token_api_users_api_tokens__token_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                token_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeleteTokenResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_ratings_api_users__id__ratings_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRatings_UserRatingOut_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_favorites_api_users__id__favorites_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRatings_UserRatingOut_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_rating_api_users__id__ratings__slug__post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                id: string;
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserRatingUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_favorite_api_users__id__favorites__slug__post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                id: string;
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_favorite_api_users__id__favorites__slug__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                id: string;
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_cookbooks_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CookBookPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_many_api_households_cookbooks_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateCookBook"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadCookBook"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_cookbooks_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCookBook"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadCookBook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_cookbooks__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCookBook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_cookbooks__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCookBook"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadCookBook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_cookbooks__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadCookBook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_events_notifications_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupEventPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_events_notifications_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupEventNotifierCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupEventNotifierOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_events_notifications__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupEventNotifierOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_events_notifications__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupEventNotifierUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupEventNotifierOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_events_notifications__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    test_notification_api_households_events_notifications__item_id__test_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_recipe_actions_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupRecipeActionPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_recipe_actions_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateGroupRecipeAction"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupRecipeActionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_recipe_actions__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupRecipeActionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_recipe_actions__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SaveGroupRecipeAction"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupRecipeActionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_recipe_actions__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupRecipeActionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    trigger_action_api_households_recipe_actions__item_id__trigger__recipe_slug__post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                recipe_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_logged_in_user_household_api_households_self_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_household_recipe_api_households_self_recipes__recipe_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                recipe_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdRecipeSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_household_members_api_households_members_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_UserOut_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_household_preferences_api_households_preferences_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadHouseholdPreferences"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_household_preferences_api_households_preferences_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateHouseholdPreferences"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadHouseholdPreferences"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_member_permissions_api_households_permissions_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SetPermissions"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_statistics_api_households_statistics_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdStatistics"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_invite_tokens_api_households_invitations_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadInviteToken"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_invite_token_api_households_invitations_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateInviteToken"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadInviteToken"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    email_invitation_api_households_invitations_email_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmailInvitation"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailInitationResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_shopping_lists_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_shopping_lists_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_shopping_lists__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_shopping_lists__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_shopping_lists__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_label_settings_api_households_shopping_lists__item_id__label_settings_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListMultiPurposeLabelUpdate"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_recipe_ingredients_to_list_api_households_shopping_lists__item_id__recipe_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListAddRecipeParamsBulk"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_single_recipe_ingredients_to_list_api_households_shopping_lists__item_id__recipe__recipe_id__post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                recipe_id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ShoppingListAddRecipeParams"] | null;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_recipe_ingredients_from_list_api_households_shopping_lists__item_id__recipe__recipe_id__delete_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                recipe_id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ShoppingListRemoveRecipeParams"] | null;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_shopping_items_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListItemPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_many_api_households_shopping_items_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListItemUpdateBulk"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListItemsCollectionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_shopping_items_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListItemCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListItemsCollectionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_many_api_households_shopping_items_delete: {
        parameters: {
            query?: {
                ids?: string[];
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_many_api_households_shopping_items_create_bulk_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListItemCreate"][];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListItemsCollectionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_shopping_items__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListItemOut-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_shopping_items__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShoppingListItemUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShoppingListItemsCollectionOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_shopping_items__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_webhooks_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebhookPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_webhooks_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateWebhook"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadWebhook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    rerun_webhooks_api_households_webhooks_rerun_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_webhooks__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadWebhook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_webhooks__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateWebhook"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadWebhook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_webhooks__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadWebhook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    test_one_api_households_webhooks__item_id__test_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_mealplans_rules_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlanRulesPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_mealplans_rules_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlanRulesCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlanRulesOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_mealplans_rules__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlanRulesOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_mealplans_rules__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlanRulesCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlanRulesOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_mealplans_rules__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlanRulesOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_households_mealplans_get: {
        parameters: {
            query?: {
                start_date?: string | null;
                end_date?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlanEntryPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_households_mealplans_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreatePlanEntry"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadPlanEntry"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_todays_meals_api_households_mealplans_today_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_random_meal_api_households_mealplans_random_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateRandomEntry"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadPlanEntry"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_households_mealplans__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadPlanEntry"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_households_mealplans__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdatePlanEntry"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadPlanEntry"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_households_mealplans__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadPlanEntry"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_households_api_groups_households_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_HouseholdSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_household_api_groups_households__household_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                household_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_logged_in_user_group_api_groups_self_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_group_members_api_groups_members_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_UserSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_group_member_api_groups_members__username_or_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                username_or_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_group_preferences_api_groups_preferences_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadGroupPreferences"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_group_preferences_api_groups_preferences_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateGroupPreferences"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReadGroupPreferences"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_storage_api_groups_storage_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupStorage"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    start_data_migration_api_groups_migrations_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_start_data_migration_api_groups_migrations_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReportSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_groups_reports_get: {
        parameters: {
            query?: {
                report_type?: components["schemas"]["ReportCategory"] | null;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReportSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_groups_reports__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReportOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_groups_reports__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_groups_labels_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MultiPurposeLabelPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_groups_labels_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MultiPurposeLabelCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MultiPurposeLabelOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_groups_labels__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MultiPurposeLabelOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_groups_labels__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MultiPurposeLabelUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MultiPurposeLabelOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_groups_labels__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MultiPurposeLabelOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    seed_foods_api_groups_seeders_foods_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SeederConfig"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    seed_labels_api_groups_seeders_labels_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SeederConfig"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    seed_units_api_groups_seeders_units_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SeederConfig"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_formats_and_templates_api_recipes_exports_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FormatResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_as_format_api_recipes__slug__exports_get: {
        parameters: {
            query: {
                template_name: string;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_zip_token_api_recipes__slug__exports_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeZipTokenResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_as_zip_api_recipes__slug__exports_zip_get: {
        parameters: {
            query: {
                token: string;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    test_parse_recipe_url_api_recipes_test_scrape_url_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScrapeRecipeTest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_recipe_from_html_or_json_api_recipes_create_html_or_json_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScrapeRecipeData"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    parse_recipe_url_api_recipes_create_url_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScrapeRecipe"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    parse_recipe_url_bulk_api_recipes_create_url_bulk_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateRecipeByUrlBulk"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_recipe_from_zip_api_recipes_create_zip_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_create_recipe_from_zip_api_recipes_create_zip_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_recipe_from_image_api_recipes_create_image_post: {
        parameters: {
            query?: {
                translateLanguage?: string | null;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_create_recipe_from_image_api_recipes_create_image_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_recipes_get: {
        parameters: {
            query?: {
                categories?: (string)[] | null;
                tags?: (string)[] | null;
                tools?: (string)[] | null;
                foods?: (string)[] | null;
                households?: (string)[] | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
                cookbook?: string | null;
                requireAllCategories?: boolean;
                requireAllTags?: boolean;
                requireAllTools?: boolean;
                requireAllFoods?: boolean;
                search?: string | null;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_RecipeSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_many_api_recipes_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Recipe-Input"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_recipes_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateRecipe"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    patch_many_api_recipes_patch: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Recipe-Input"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    suggest_recipes_api_recipes_suggestions_get: {
        parameters: {
            query?: {
                foods?: string[] | null;
                tools?: string[] | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                limit?: number;
                maxMissingFoods?: number;
                maxMissingTools?: number;
                includeFoodsOnHand?: boolean;
                includeToolsOnHand?: boolean;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeSuggestionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_recipes__slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                /** @description A recipe's slug or id */
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_recipes__slug__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Recipe-Input"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_recipes__slug__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    patch_one_api_recipes__slug__patch: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Recipe-Input"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    duplicate_one_api_recipes__slug__duplicate_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeDuplicate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_last_made_api_recipes__slug__last_made_patch: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeLastMade"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_recipe_image_api_recipes__slug__image_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_update_recipe_image_api_recipes__slug__image_put"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateImageResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    scrape_image_url_api_recipes__slug__image_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScrapeRecipe"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    upload_recipe_asset_api_recipes__slug__assets_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_upload_recipe_asset_api_recipes__slug__assets_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeAsset"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_comments_api_recipes__slug__comments_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCommentOut-Output"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulk_tag_recipes_api_recipes_bulk_actions_tag_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AssignTags"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulk_settings_recipes_api_recipes_bulk_actions_settings_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AssignSettings"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulk_categorize_recipes_api_recipes_bulk_actions_categorize_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AssignCategories"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulk_delete_recipes_api_recipes_bulk_actions_delete_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteRecipes"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_exported_data_api_recipes_bulk_actions_export_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupDataExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulk_export_recipes_api_recipes_bulk_actions_export_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ExportRecipes"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_exported_data_token_api_recipes_bulk_actions_export_download_get: {
        parameters: {
            query: {
                path: string;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    purge_export_data_api_recipes_bulk_actions_export_purge_delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_shared_recipe_api_recipes_shared__token_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                token_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_recipes_timeline_events_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTimelineEventPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_recipes_timeline_events_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeTimelineEventIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTimelineEventOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_recipes_timeline_events__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTimelineEventOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_recipes_timeline_events__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeTimelineEventUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTimelineEventOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_recipes_timeline_events__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTimelineEventOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_event_image_api_recipes_timeline_events__item_id__image_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_update_event_image_api_recipes_timeline_events__item_id__image_put"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateImageResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_organizers_categories_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCategoryPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_organizers_categories_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CategoryIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_empty_api_organizers_categories_empty_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryBase"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_organizers_categories__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategorySummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_organizers_categories__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CategoryIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategorySummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_organizers_categories__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_by_slug_api_organizers_categories_slug__category_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                category_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_organizers_tags_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTagPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_organizers_tags_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TagIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_empty_tags_api_organizers_tags_empty_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_organizers_tags__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTagResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_organizers_tags__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TagIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTagResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_recipe_tag_api_organizers_tags__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_by_slug_api_organizers_tags_slug__tag_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                tag_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTagResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_organizers_tools_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeToolPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_organizers_tools_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeToolCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTool"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_organizers_tools__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTool"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_organizers_tools__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeToolCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTool"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_organizers_tools__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeTool"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_by_slug_api_organizers_tools_slug__tool_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                tool_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeToolResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_shared_recipes_get: {
        parameters: {
            query?: {
                recipe_id?: string | null;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeShareTokenSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_shared_recipes_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeShareTokenCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeShareToken"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_shared_recipes__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeShareToken"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_shared_recipes__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_comments_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCommentPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_comments_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeCommentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCommentOut-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_comments__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCommentOut-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_comments__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecipeCommentUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCommentOut-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_comments__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    parse_ingredient_api_parser_ingredient_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IngredientRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParsedIngredient"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    parse_ingredients_api_parser_ingredients_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IngredientsRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParsedIngredient"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_foods_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientFoodPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_foods_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateIngredientFood"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientFood-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    merge_one_api_foods_merge_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MergeFood"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_foods__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientFood-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_foods__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateIngredientFood"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientFood-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_foods__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientFood-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_units_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientUnitPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_units_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateIngredientUnit"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientUnit-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    merge_one_api_units_merge_put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MergeUnit"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_units__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientUnit-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_units__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateIngredientUnit"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientUnit-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_units__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientUnit-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_app_info_api_admin_about_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminAboutInfo"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_app_statistics_api_admin_about_statistics_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppStatistics"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    check_app_config_api_admin_about_check_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CheckAppConfig"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_admin_users_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_admin_users_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    unlock_users_api_admin_users_unlock_post: {
        parameters: {
            query?: {
                force?: boolean;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnlockResults"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_admin_users__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_admin_users__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserOut"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_admin_users__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_token_api_admin_users_password_reset_token_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ForgotPassword"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PasswordResetToken"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_admin_households_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_admin_households_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HouseholdCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_admin_households__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_admin_households__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateHouseholdAdmin"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_admin_households__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_admin_groups_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupPagination"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_admin_groups_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupBase"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_admin_groups__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_one_api_admin_groups__item_id__put: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupAdminUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_admin_groups__item_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupInDB"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    check_email_config_api_admin_email_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailReady"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    send_test_email_api_admin_email_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmailTest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailSuccess"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_admin_backups_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllBackups"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_one_api_admin_backups_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_admin_backups__file_name__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                file_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FileTokenResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_one_api_admin_backups__file_name__delete: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                file_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    upload_one_api_admin_backups_upload_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_upload_one_api_admin_backups_upload_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    import_one_api_admin_backups__file_name__restore_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                file_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_maintenance_summary_api_admin_maintenance_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MaintenanceSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_storage_details_api_admin_maintenance_storage_get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MaintenanceStorageDetails"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    clean_images_api_admin_maintenance_clean_images_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    clean_temp_api_admin_maintenance_clean_temp_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    clean_recipe_folders_api_admin_maintenance_clean_recipe_folders_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    debug_openai_api_admin_debug_openai_post: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": components["schemas"]["Body_debug_openai_api_admin_debug_openai_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DebugResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__foods_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_IngredientFood_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_explore_groups__group_slug__foods__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngredientFood-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__households_get: {
        parameters: {
            query?: {
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_HouseholdSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_household_api_explore_groups__group_slug__households__household_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                household_slug: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HouseholdSummary"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__organizers_categories_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_RecipeCategory_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_explore_groups__group_slug__organizers_categories__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoryOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__organizers_tags_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_RecipeTag_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_explore_groups__group_slug__organizers_tags__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TagOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__organizers_tools_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_RecipeTool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_explore_groups__group_slug__organizers_tools__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeToolOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__cookbooks_get: {
        parameters: {
            query?: {
                search?: string | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_ReadCookBook_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_one_api_explore_groups__group_slug__cookbooks__item_id__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                item_id: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeCookBook"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_api_explore_groups__group_slug__recipes_get: {
        parameters: {
            query?: {
                categories?: (string)[] | null;
                tags?: (string)[] | null;
                tools?: (string)[] | null;
                foods?: (string)[] | null;
                households?: (string)[] | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                page?: number;
                perPage?: number;
                cookbook?: string | null;
                requireAllCategories?: boolean;
                requireAllTags?: boolean;
                requireAllTools?: boolean;
                requireAllFoods?: boolean;
                search?: string | null;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationBase_RecipeSummary_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    suggest_recipes_api_explore_groups__group_slug__recipes_suggestions_get: {
        parameters: {
            query?: {
                foods?: string[] | null;
                tools?: string[] | null;
                orderBy?: string | null;
                orderByNullPosition?: components["schemas"]["OrderByNullPosition"] | null;
                orderDirection?: components["schemas"]["OrderDirection"];
                queryFilter?: string | null;
                paginationSeed?: string | null;
                limit?: number;
                maxMissingFoods?: number;
                maxMissingTools?: number;
                includeFoodsOnHand?: boolean;
                includeToolsOnHand?: boolean;
            };
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecipeSuggestionResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_api_explore_groups__group_slug__recipes__recipe_slug__get: {
        parameters: {
            query?: never;
            header?: {
                "accept-language"?: string | null;
            };
            path: {
                recipe_slug: string;
                group_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Recipe-Output"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_img_api_media_recipes__recipe_id__images__file_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                recipe_id: string;
                file_name: components["schemas"]["ImageType"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_timeline_event_img_api_media_recipes__recipe_id__images_timeline__timeline_event_id___file_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                recipe_id: string;
                timeline_event_id: string;
                file_name: components["schemas"]["ImageType"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recipe_asset_api_media_recipes__recipe_id__assets__file_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                recipe_id: string;
                file_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_image_api_media_users__user_id___file_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: string;
                file_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_validation_text_api_media_docker_validate_txt_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    download_file_api_utils_download_get: {
        parameters: {
            query?: {
                token?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
